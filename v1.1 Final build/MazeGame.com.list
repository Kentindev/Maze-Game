EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
MazeGame.com -- emu8086 assembler version: 4.08  
 
[ 11/05/2019  --  19:24:35 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       name "MazeGame"
[   2]        :                                       
[   3]        :                                       org 100h
[   4]        :                                       
[   5]        :                                       include emu8086.inc
[   6]        :                                       
[   7]        :                                       
[   8]    0100: 50 51 B4 01 B5 28 B1 09 CD 10 59 58   CURSOROFF;Hide the cursor (works with "emu8086.inc")
                                                    
[   9]    010C:                                       Menu:
[  10]        :                                       
[  11]    010C: E8 0B 4B                              call CLEAR_SCREEN
[  12]        :                                       ;Display menu
[  13]    010F: E8 2B 38                              call set_background_color
[  14]    0112: B4 09                                 mov ah,09h
[  15]    0114: B6 00                                 mov dh,0
[  16]    0116: BA 54 39                              mov dx, offset game_menu_str
[  17]    0119: CD 21                                 int 21h
[  18]        :                                       
[  19]        :                                       
[  20]        :                                       
[  21]    011B:                                       wait_keypress:
[  22]        :                                       ;wait for a key to be pressed:
[  23]    011B: B4 00                                 mov ah, 0h
[  24]    011D: CD 16                                 int 16h
[  25]        :                                       
[  26]        :                                       
[  27]    011F: 3C 0D                                 cmp al, 13 ;if "enter":
[  28]    0121: 74 09                                 je start_maze_game
[  29]        :                                       
[  30]        :                                       
[  31]    0123: 3C 1B                                 cmp al, 27 ;if "esc":
[  32]    0125: 75 03 E9 D8 33                        je give_up
[  33]        :                                       
[  34]    012A: EB EF                                 jmp wait_keypress
[  35]        :                                       
[  36]        :                                       
[  37]        :                                       
[  38]    012C:                                       start_maze_game:
[  39]        :                                       
[  40]    012C: E8 EB 4A                              call CLEAR_SCREEN
[  41]    012F: E8 0B 38                              call set_background_color
[  42]        :                                       ;draw the maze in 2 step:
[  43]        :                                       include "maze_part1.asm"
[  44]    1022:                                       maze_part2:
[  45]        :                                       
[  46]    1022: B6 03 B2 3D E8 CC 1B 50 56 EB 02 B9   include "maze_part2.asm"
                00 BE 2D 10 2E 8A 04 3C 00 74 07 46 
                B4 0E CD 10 EB F2 5E 58 80 EA 01 E8 
                AD 1B 50 56 EB 02 CD 00 BE 4C 10 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 FA 33 74 02 E2 DA B6 07 
                B2 3D E8 86 1B 50 56 EB 02 B9 00 BE 
                73 10 2E 8A 04 3C 00 74 07 46 B4 0E 
                CD 10 EB F2 5E 58 80 EA 01 E8 67 1B 
                50 56 EB 02 CD 00 BE 92 10 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58 80 FA 38 74 02 E2 DA 80 EA 01 E8 
                41 1B 50 56 EB 02 C9 00 BE B8 10 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 C6 01 E8 22 1B 50 56 EB 
                02 BA 00 BE D7 10 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58 80 C6 
                01 E8 03 1B 50 56 EB 02 CA 00 BE F6 
                10 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58 80 EA 01 E8 E4 1A 50 
                56 EB 02 CD 00 BE 15 11 2E 8A 04 3C 
                00 74 07 46 B4 0E CD 10 EB F2 5E 58 
                80 EA 01 E8 C5 1A 50 56 EB 02 CD 00 
                BE 34 11 2E 8A 04 3C 00 74 07 46 B4 
                0E CD 10 EB F2 5E 58 80 FA 32 74 02 
                E2 DA B2 38 E8 A0 1A 50 56 EB 02 CD 
                00 BE 59 11 2E 8A 04 3C 00 74 07 46 
                B4 0E CD 10 EB F2 5E 58 80 C2 01 E8 
                81 1A 50 56 EB 02 CD 00 BE 78 11 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 C2 01 E8 62 1A 50 56 EB 
                02 BB 00 BE 97 11 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58 80 C6 
                01 E8 43 1A 50 56 EB 02 BA 00 BE B6 
                11 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58 80 C6 01 E8 24 1A 50 
                56 EB 02 BC 00 BE D5 11 2E 8A 04 3C 
                00 74 07 46 B4 0E CD 10 EB F2 5E 58 
                80 EA 01 E8 05 1A 50 56 EB 02 CD 00 
                BE F4 11 2E 8A 04 3C 00 74 07 46 B4 
                0E CD 10 EB F2 5E 58 80 FA 2B 74 02 
                E2 DA B2 2F E8 E0 19 50 56 EB 02 CA 
                00 BE 19 12 2E 8A 04 3C 00 74 07 46 
                B4 0E CD 10 EB F2 5E 58 80 EE 01 E8 
                C1 19 50 56 EB 02 BA 00 BE 38 12 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 FE 08 74 02 E2 DA 80 EE 
                01 E8 9B 19 50 56 EB 02 C9 00 BE 5E 
                12 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58 80 C2 01 E8 7C 19 50 
                56 EB 02 CD 00 BE 7D 12 2E 8A 04 3C 
                00 74 07 46 B4 0E CD 10 EB F2 5E 58 
                80 FA 34 74 02 E2 DA B6 0B B2 34 E8 
                55 19 50 56 EB 02 CB 00 BE A4 12 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 C6 01 E8 36 19 50 56 EB 
                02 BA 00 BE C3 12 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58 B2 3D 
                B6 0F E8 16 19 50 56 EB 02 B9 00 BE 
                E3 12 2E 8A 04 3C 00 74 07 46 B4 0E 
                CD 10 EB F2 5E 58 80 EA 01 E8 F7 18 
                50 56 EB 02 CD 00 BE 02 13 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58 80 EA 01 E8 D8 18 50 56 EB 02 CD 
                00 BE 21 13 2E 8A 04 3C 00 74 07 46 
                B4 0E CD 10 EB F2 5E 58 80 EA 01 E8 
                B9 18 50 56 EB 02 C9 00 BE 40 13 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 C6 01 E8 9A 18 50 56 EB 
                02 BA 00 BE 5F 13 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58 80 FE 
                14 74 02 E2 DA B6 05 B2 3A E8 73 18 
                80 EA 01 E8 6D 18 50 56 EB 02 CD 00 
                BE 8C 13 2E 8A 04 3C 00 74 07 46 B4 
                0E CD 10 EB F2 5E 58 80 FA 31 74 02 
                E2 DA 80 EA 01 E8 47 18 50 56 EB 02 
                C8 00 BE B2 13 2E 8A 04 3C 00 74 07 
                46 B4 0E CD 10 EB F2 5E 58 80 EE 01 
                E8 28 18 50 56 EB 02 BA 00 BE D1 13 
                2E 8A 04 3C 00 74 07 46 B4 0E CD 10 
                EB F2 5E 58 80 FE 01 74 02 E2 DA 80 
                EE 01 E8 02 18 50 56 EB 02 CB 00 BE 
                F7 13 2E 8A 04 3C 00 74 07 46 B4 0E 
                CD 10 EB F2 5E 58 B6 03 E8 E4 17 50 
                56 EB 02 B9 00 BE 15 14 2E 8A 04 3C 
                00 74 07 46 B4 0E CD 10 EB F2 5E 58 
                80 EA 01 E8 C5 17 50 56 EB 02 CD 00 
                BE 34 14 2E 8A 04 3C 00 74 07 46 B4 
                0E CD 10 EB F2 5E 58 80 FA 2C 74 02 
                E2 DA B6 0D B2 3A E8 9E 17 50 56 EB 
                02 CD 00 BE 5B 14 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58 80 EA 
                01 E8 7F 17 50 56 EB 02 CD 00 BE 7A 
                14 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58 80 EA 01 E8 60 17 50 
                56 EB 02 CD 00 BE 99 14 2E 8A 04 3C 
                00 74 07 46 B4 0E CD 10 EB F2 5E 58 
                80 EA 01 E8 41 17 50 56 EB 02 C9 00 
                BE B8 14 2E 8A 04 3C 00 74 07 46 B4 
                0E CD 10 EB F2 5E 58 80 C6 01 E8 22 
                17 50 56 EB 02 BC 00 BE D7 14 2E 8A 
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58 80 EA 01 E8 03 17 50 56 EB 02 
                CD 00 BE F6 14 2E 8A 04 3C 00 74 07 
                46 B4 0E CD 10 EB F2 5E 58 80 FA 32 
                74 02 E2 DA 80 EA 01 E8 DD 16 50 56 
                EB 02 C8 00 BE 1C 15 2E 8A 04 3C 00 
                74 07 46 B4 0E CD 10 EB F2 5E 58 80 
                EE 01 E8 BE 16 50 56 EB 02 BB 00 BE 
                3B 15 2E 8A 04 3C 00 74 07 46 B4 0E 
                CD 10 EB F2 5E 58 80 EA 01 E8 9F 16 
                50 56 EB 02 CD 00 BE 5A 15 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58 80 FA 2C 74 02 E2 DA 80 EA 01 E8 
                79 16 50 56 EB 02 C9 00 BE 80 15 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 C6 01 E8 5A 16 50 56 EB 
                02 BC 00 BE 9F 15 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58 80 EA 
                01 E8 3B 16 50 56 EB 02 C9 00 BE BE 
                15 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58 80 C6 01 E8 1C 16 50 
                56 EB 02 BA 00 BE DD 15 2E 8A 04 3C 
                00 74 07 46 B4 0E CD 10 EB F2 5E 58 
                80 C6 01 E8 FD 15 50 56 EB 02 CA 00 
                BE FC 15 2E 8A 04 3C 00 74 07 46 B4 
                0E CD 10 EB F2 5E 58 80 C2 01 E8 DE 
                15 50 56 EB 02 CD 00 BE 1B 16 2E 8A 
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58 80 FA 36 74 02 E2 DA 80 C2 01 
                E8 B8 15 50 56 EB 02 BB 00 BE 41 16 
                2E 8A 04 3C 00 74 07 46 B4 0E CD 10 
                EB F2 5E 58 80 C6 01 E8 99 15 50 56 
                EB 02 BA 00 BE 60 16 2E 8A 04 3C 00 
                74 07 46 B4 0E CD 10 EB F2 5E 58 80 
                FE 15 74 02 E2 DA 80 C6 01 E8 73 15 
                50 56 EB 02 CA 00 BE 86 16 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58 B2 2E B6 10 E8 53 15 50 56 EB 02 
                CE 00 BE A6 16 2E 8A 04 3C 00 74 07 
                46 B4 0E CD 10 EB F2 5E 58 80 EE 01 
                E8 34 15 50 56 EB 02 BA 00 BE C5 16 
                2E 8A 04 3C 00 74 07 46 B4 0E CD 10 
                EB F2 5E 58 80 C6 01 80 C6 01 E8 12 
                15 50 56 EB 02 BA 00 BE E7 16 2E 8A 
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58 80 FE 13 74 02 E2 DA 80 C6 01 
                E8 EC 14 50 56 EB 02 C8 00 BE 0D 17 
                2E 8A 04 3C 00 74 07 46 B4 0E CD 10 
                EB F2 5E 58 80 C2 01 E8 CD 14 50 56 
                EB 02 CD 00 BE 2C 17 2E 8A 04 3C 00 
                74 07 46 B4 0E CD 10 EB F2 5E 58 80 
                FA 33 74 02 E2 DA 80 C2 01 E8 A7 14 
                50 56 EB 02 BC 00 BE 52 17 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58 80 EE 01 E8 88 14 50 56 EB 02 BA 
                00 BE 71 17 2E 8A 04 3C 00 74 07 46 
                B4 0E CD 10 EB F2 5E 58 80 EE 01 E8 
                69 14 50 56 EB 02 BB 00 BE 90 17 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 EA 01 E8 4A 14 50 56 EB 
                02 CD 00 BE AF 17 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58 80 EA 
                01 E8 2B 14 50 56 EB 02 CD 00 BE CE 
                17 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58 80 EA 01 E8 0C 14 50 
                56 EB 02 CD 00 BE ED 17 2E 8A 04 3C 
                00 74 07 46 B4 0E CD 10 EB F2 5E 58 
                B2 29 B6 10 E8 EC 13 50 56 EB 02 CD 
                00 BE 0D 18 2E 8A 04 3C 00 74 07 46 
                B4 0E CD 10 EB F2 5E 58 80 EA 01 E8 
                CD 13 50 56 EB 02 CD 00 BE 2C 18 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 FA 26 74 02 E2 DA 80 EA 
                01 E8 A7 13 50 56 EB 02 C9 00 BE 52 
                18 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58 80 C6 01 E8 88 13 50 
                56 EB 02 BA 00 BE 71 18 2E 8A 04 3C 
                00 74 07 46 B4 0E CD 10 EB F2 5E 58 
                80 C6 01 E8 69 13 50 56 EB 02 CA 00 
                BE 90 18 2E 8A 04 3C 00 74 07 46 B4 
                0E CD 10 EB F2 5E 58 80 EA 01 E8 4A 
                13 50 56 EB 02 CD 00 BE AF 18 2E 8A 
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58 80 FA 1F 74 02 E2 DA 80 EA 01 
                E8 24 13 50 56 EB 02 C9 00 BE D5 18 
                2E 8A 04 3C 00 74 07 46 B4 0E CD 10 
                EB F2 5E 58 80 C6 01 E8 05 13 50 56 
                EB 02 BA 00 BE F4 18 2E 8A 04 3C 00 
                74 07 46 B4 0E CD 10 EB F2 5E 58 80 
                C6 01 E8 E6 12 50 56 EB 02 CA 00 BE 
                13 19 2E 8A 04 3C 00 74 07 46 B4 0E 
                CD 10 EB F2 5E 58 80 EA 01 E8 C7 12 
                50 56 EB 02 CD 00 BE 32 19 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58 80 EA 01 E8 A8 12 50 56 EB 02 CD 
                00 BE 51 19 2E 8A 04 3C 00 74 07 46 
                B4 0E CD 10 EB F2 5E 58 80 EA 01 E8 
                89 12 50 56 EB 02 CD 00 BE 70 19 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 B2 1E E8 6B 12 80 C2 01 E8 
                65 12 50 56 EB 02 CD 00 BE 94 19 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 FA 23 74 02 E2 DA B2 26 
                B6 12 E8 3E 12 50 56 EB 02 CD 00 BE 
                BB 19 2E 8A 04 3C 00 74 07 46 B4 0E 
                CD 10 EB F2 5E 58 80 C2 01 E8 1F 12 
                50 56 EB 02 CD 00 BE DA 19 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58 80 FA 2A 74 02 E2 DA 80 C2 01 E8 
                F9 11 50 56 EB 02 BB 00 BE 00 1A 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 C6 01 E8 DA 11 50 56 EB 
                02 BA 00 BE 1F 1A 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58 80 C6 
                01 E8 BB 11 50 56 EB 02 BA 00 BE 3E 
                1A 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58 B2 26 B6 16 E8 9B 11 
                50 56 EB 02 CA 00 BE 5E 1A 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58 80 EE 01 E8 7C 11 50 56 EB 02 BA 
                00 BE 7D 1A 2E 8A 04 3C 00 74 07 46 
                B4 0E CD 10 EB F2 5E 58 80 EE 01 E8 
                5D 11 50 56 EB 02 C9 00 BE 9C 1A 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 C2 01 E8 3E 11 50 56 EB 
                02 CD 00 BE BB 1A 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58 80 C2 
                01 E8 1F 11 50 56 EB 02 CD 00 BE DA 
                1A 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58 B6 05 B2 2D E8 FF 10 
                50 56 EB 02 CD 00 BE FA 1A 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58 80 EA 01 E8 E0 10 50 56 EB 02 C9 
                00 BE 19 1B 2E 8A 04 3C 00 74 07 46 
                B4 0E CD 10 EB F2 5E 58 80 C6 01 E8 
                C1 10 50 56 EB 02 BA 00 BE 38 1B 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 C6 01 E8 A2 10 50 56 EB 
                02 BA 00 BE 57 1B 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58 80 C6 
                01 E8 83 10 50 56 EB 02 BA 00 BE 76 
                1B 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58 80 C6 01 E8 64 10 50 
                56 EB 02 BC 00 BE 95 1B 2E 8A 04 3C 
                00 74 07 46 B4 0E CD 10 EB F2 5E 58 
                80 EA 01 E8 45 10 50 56 EB 02 CD 00 
                BE B4 1B 2E 8A 04 3C 00 74 07 46 B4 
                0E CD 10 EB F2 5E 58 80 EA 01 E8 26 
                10 50 56 EB 02 CD 00 BE D3 1B 2E 8A 
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58 80 EA 01 E8 07 10 50 56 EB 02 
                CD 00 BE F2 1B 2E 8A 04 3C 00 74 07 
                46 B4 0E CD 10 EB F2 5E 58 80 EA 01 
                E8 E8 0F 50 56 EB 02 CC 00 BE 11 1C 
                2E 8A 04 3C 00 74 07 46 B4 0E CD 10 
                EB F2 5E 58 80 EE 01 E8 C9 0F 50 56 
                EB 02 B9 00 BE 30 1C 2E 8A 04 3C 00 
                74 07 46 B4 0E CD 10 EB F2 5E 58 80 
                EA 01 E8 AA 0F 50 56 EB 02 CD 00 BE 
                4F 1C 2E 8A 04 3C 00 74 07 46 B4 0E 
                CD 10 EB F2 5E 58 80 EA 01 E8 8B 0F 
                50 56 EB 02 C8 00 BE 6E 1C 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58 80 EE 01 E8 6C 0F 50 56 EB 02 C9 
                00 BE 8D 1C 2E 8A 04 3C 00 74 07 46 
                B4 0E CD 10 EB F2 5E 58 80 C2 01 E8 
                4D 0F 50 56 EB 02 CD 00 BE AC 1C 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 C2 01 E8 2E 0F 50 56 EB 
                02 CB 00 BE CB 1C 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58 80 C2 
                01 E8 0F 0F 50 56 EB 02 BC 00 BE EA 
                1C 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58 80 EE 01 E8 F0 0E 50 
                56 EB 02 BA 00 BE 09 1D 2E 8A 04 3C 
                00 74 07 46 B4 0E CD 10 EB F2 5E 58 
                80 FE 01 74 02 E2 DA 80 EE 01 E8 CA 
                0E 50 56 EB 02 CB 00 BE 2F 1D 2E 8A 
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58 B6 0A B2 28 E8 AA 0E 50 56 EB 
                02 BA 00 BE 4F 1D 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58 80 C6 
                01 E8 8B 0E 50 56 EB 02 BA 00 BE 6E 
                1D 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58 80 C6 01 E8 6C 0E 50 
                56 EB 02 BC 00 BE 8D 1D 2E 8A 04 3C 
                00 74 07 46 B4 0E CD 10 EB F2 5E 58 
                80 EA 01 E8 4D 0E 50 56 EB 02 C9 00 
                BE AC 1D 2E 8A 04 3C 00 74 07 46 B4 
                0E CD 10 EB F2 5E 58 80 C6 01 E8 2E 
                0E 50 56 EB 02 BA 00 BE CB 1D 2E 8A 
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58 80 C6 01 E8 0F 0E 50 56 EB 02 
                BC 00 BE EA 1D 2E 8A 04 3C 00 74 07 
                46 B4 0E CD 10 EB F2 5E 58 80 EA 01 
                E8 F0 0D 50 56 EB 02 CD 00 BE 09 1E 
                2E 8A 04 3C 00 74 07 46 B4 0E CD 10 
                EB F2 5E 58 80 EA 01 E8 D1 0D 50 56 
                EB 02 CD 00 BE 28 1E 2E 8A 04 3C 00 
                74 07 46 B4 0E CD 10 EB F2 5E 58 80 
                EA 01 E8 B2 0D 50 56 EB 02 C8 00 BE 
                47 1E 2E 8A 04 3C 00 74 07 46 B4 0E 
                CD 10 EB F2 5E 58 80 EE 01 E8 93 0D 
                50 56 EB 02 BA 00 BE 66 1E 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58 80 FE 0B 74 02 E2 DA 80 EE 01 E8 
                6D 0D 50 56 EB 02 CB 00 BE 8C 1E 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 C2 01 E8 4E 0D 50 56 EB 
                02 CD 00 BE AB 1E 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58 80 EA 
                02 E8 2F 0D 50 56 EB 02 CD 00 BE CA 
                1E 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58 80 EA 01 E8 10 0D 50 
                56 EB 02 CD 00 BE E9 1E 2E 8A 04 3C 
                00 74 07 46 B4 0E CD 10 EB F2 5E 58 
                80 EA 01 E8 F1 0C 50 56 EB 02 C8 00 
                BE 08 1F 2E 8A 04 3C 00 74 07 46 B4 
                0E CD 10 EB F2 5E 58 80 EE 01 E8 D2 
                0C 50 56 EB 02 BA 00 BE 27 1F 2E 8A 
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58 80 EE 01 E8 B3 0C 50 56 EB 02 
                CB 00 BE 46 1F 2E 8A 04 3C 00 74 07 
                46 B4 0E CD 10 EB F2 5E 58 80 C2 01 
                E8 94 0C 50 56 EB 02 CD 00 BE 65 1F 
                2E 8A 04 3C 00 74 07 46 B4 0E CD 10 
                EB F2 5E 58 80 C2 01 E8 75 0C 50 56 
                EB 02 BC 00 BE 84 1F 2E 8A 04 3C 00 
                74 07 46 B4 0E CD 10 EB F2 5E 58 80 
                EE 01 E8 56 0C 50 56 EB 02 BA 00 BE 
                A3 1F 2E 8A 04 3C 00 74 07 46 B4 0E 
                CD 10 EB F2 5E 58 80 EE 01 E8 37 0C 
                50 56 EB 02 BA 00 BE C2 1F 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58 80 EE 01 E8 18 0C 50 56 EB 02 C9 
                00 BE E1 1F 2E 8A 04 3C 00 74 07 46 
                B4 0E CD 10 EB F2 5E 58 80 C2 01 E8 
                F9 0B 50 56 EB 02 CD 00 BE 00 20 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 C2 01 E8 DA 0B 50 56 EB 
                02 CD 00 BE 1F 20 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58 80 C2 
                01 E8 BB 0B 50 56 EB 02 CD 00 BE 3E 
                20 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58 B2 20 B6 08 E8 9B 0B 
                50 56 EB 02 CD 00 BE 5E 20 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58 80 EA 01 E8 7C 0B 50 56 EB 02 CD 
                00 BE 7D 20 2E 8A 04 3C 00 74 07 46 
                B4 0E CD 10 EB F2 5E 58 80 EA 01 E8 
                5D 0B 50 56 EB 02 CD 00 BE 9C 20 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 EA 01 E8 3E 0B 50 56 EB 
                02 C8 00 BE BB 20 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58 80 EE 
                01 E8 1F 0B 50 56 EB 02 B9 00 BE DA 
                20 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58 80 EA 01 E8 00 0B 50 
                56 EB 02 CA 00 BE F9 20 2E 8A 04 3C 
                00 74 07 46 B4 0E CD 10 EB F2 5E 58 
                80 EA 01 E8 E1 0A 50 56 EB 02 C8 00 
                BE 18 21 2E 8A 04 3C 00 74 07 46 B4 
                0E CD 10 EB F2 5E 58 80 EE 01 E8 C2 
                0A 50 56 EB 02 CC 00 BE 37 21 2E 8A 
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58 80 C2 01 E8 A3 0A 50 56 EB 02 
                CE 00 BE 56 21 2E 8A 04 3C 00 74 07 
                46 B4 0E CD 10 EB F2 5E 58 80 C2 01 
                E8 84 0A 50 56 EB 02 B9 00 BE 75 21 
                2E 8A 04 3C 00 74 07 46 B4 0E CD 10 
                EB F2 5E 58 80 EE 01 E8 65 0A 50 56 
                EB 02 BB 00 BE 94 21 2E 8A 04 3C 00 
                74 07 46 B4 0E CD 10 EB F2 5E 58 80 
                EA 01 E8 46 0A 50 56 EB 02 CB 00 BE 
                B3 21 2E 8A 04 3C 00 74 07 46 B4 0E 
                CD 10 EB F2 5E 58 80 EA 01 E8 27 0A 
                50 56 EB 02 C9 00 BE D2 21 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58 B6 03 B2 26 E8 07 0A 50 56 EB 02 
                CD 00 BE F2 21 2E 8A 04 3C 00 74 07 
                46 B4 0E CD 10 EB F2 5E 58 80 EA 01 
                E8 E8 09 50 56 EB 02 CD 00 BE 11 22 
                2E 8A 04 3C 00 74 07 46 B4 0E CD 10 
                EB F2 5E 58 80 EA 01 E8 C9 09 50 56 
                EB 02 CD 00 BE 30 22 2E 8A 04 3C 00 
                74 07 46 B4 0E CD 10 EB F2 5E 58 80 
                EA 01 E8 AA 09 50 56 EB 02 C8 00 BE 
                4F 22 2E 8A 04 3C 00 74 07 46 B4 0E 
                CD 10 EB F2 5E 58 80 EE 01 E8 8B 09 
                50 56 EB 02 BA 00 BE 6E 22 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58 80 EE 01 E8 6C 09 50 56 EB 02 BA 
                00 BE 8D 22 2E 8A 04 3C 00 74 07 46 
                B4 0E CD 10 EB F2 5E 58 80 EE 01 E8 
                4D 09 50 56 EB 02 CB 00 BE AC 22 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 B6 06 B2 20 E8 2D 09 50 56 
                EB 02 BA 00 BE CC 22 2E 8A 04 3C 00 
                74 07 46 B4 0E CD 10 EB F2 5E 58 80 
                EE 01 E8 0E 09 50 56 EB 02 BA 00 BE 
                EB 22 2E 8A 04 3C 00 74 07 46 B4 0E 
                CD 10 EB F2 5E 58 80 EE 01 E8 EF 08 
                50 56 EB 02 BA 00 BE 0A 23 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58 80 EE 01 E8 D0 08 50 56 EB 02 BB 
                00 BE 29 23 2E 8A 04 3C 00 74 07 46 
                B4 0E CD 10 EB F2 5E 58 80 EA 01 E8 
                B1 08 50 56 EB 02 CD 00 BE 48 23 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 FA 19 74 02 E2 DA B6 0A 
                B2 1B E8 8A 08 50 56 EB 02 C8 00 BE 
                6F 23 2E 8A 04 3C 00 74 07 46 B4 0E 
                CD 10 EB F2 5E 58 80 C2 01 E8 6B 08 
                50 56 EB 02 CD 00 BE 8E 23 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58 80 C2 01 E8 4C 08 50 56 EB 02 CD 
                00 BE AD 23 2E 8A 04 3C 00 74 07 46 
                B4 0E CD 10 EB F2 5E 58 80 C2 01 E8 
                2D 08 50 56 EB 02 BB 00 BE CC 23 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 C6 01 E8 0E 08 50 56 EB 
                02 BA 00 BE EB 23 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58 80 C6 
                01 E8 EF 07 50 56 EB 02 CC 00 BE 0A 
                24 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58 80 C6 01 E8 D0 07 50 
                56 EB 02 BA 00 BE 29 24 2E 8A 04 3C 
                00 74 07 46 B4 0E CD 10 EB F2 5E 58 
                80 C6 01 E8 B1 07 50 56 EB 02 BC 00 
                BE 48 24 2E 8A 04 3C 00 74 07 46 B4 
                0E CD 10 EB F2 5E 58 80 EA 01 E8 92 
                07 50 56 EB 02 CD 00 BE 67 24 2E 8A 
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58 80 EA 01 E8 73 07 50 56 EB 02 
                CD 00 BE 86 24 2E 8A 04 3C 00 74 07 
                46 B4 0E CD 10 EB F2 5E 58 80 EA 01 
                E8 54 07 50 56 EB 02 CD 00 BE A5 24 
                2E 8A 04 3C 00 74 07 46 B4 0E CD 10 
                EB F2 5E 58 80 EA 01 E8 35 07 50 56 
                EB 02 CD 00 BE C4 24 2E 8A 04 3C 00 
                74 07 46 B4 0E CD 10 EB F2 5E 58 B6 
                0C B2 1F E8 15 07 50 56 EB 02 CD 00 
                BE E4 24 2E 8A 04 3C 00 74 07 46 B4 
                0E CD 10 EB F2 5E 58 80 C2 01 E8 F6 
                06 50 56 EB 02 CD 00 BE 03 25 2E 8A 
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58 80 C2 01 E8 D7 06 50 56 EB 02 
                BB 00 BE 22 25 2E 8A 04 3C 00 74 07 
                46 B4 0E CD 10 EB F2 5E 58 80 C6 01 
                E8 B8 06 50 56 EB 02 BA 00 BE 41 25 
                2E 8A 04 3C 00 74 07 46 B4 0E CD 10 
                EB F2 5E 58 80 C6 01 E8 99 06 50 56 
                EB 02 BA 00 BE 60 25 2E 8A 04 3C 00 
                74 07 46 B4 0E CD 10 EB F2 5E 58 80 
                C6 01 E8 7A 06 50 56 EB 02 BA 00 BE 
                7F 25 2E 8A 04 3C 00 74 07 46 B4 0E 
                CD 10 EB F2 5E 58 80 C6 01 E8 5B 06 
                50 56 EB 02 BC 00 BE 9E 25 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58 80 EA 01 E8 3C 06 50 56 EB 02 CD 
                00 BE BD 25 2E 8A 04 3C 00 74 07 46 
                B4 0E CD 10 EB F2 5E 58 80 FA 1B 74 
                02 E2 DA 80 EA 01 E8 16 06 50 56 EB 
                02 C9 00 BE E3 25 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58 80 C6 
                01 E8 F7 05 50 56 EB 02 BA 00 BE 02 
                26 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58 80 C6 01 E8 D8 05 50 
                56 EB 02 BC 00 BE 21 26 2E 8A 04 3C 
                00 74 07 46 B4 0E CD 10 EB F2 5E 58 
                80 EA 01 E8 B9 05 50 56 EB 02 CD 00 
                BE 40 26 2E 8A 04 3C 00 74 07 46 B4 
                0E CD 10 EB F2 5E 58 80 EA 01 E8 9A 
                05 50 56 EB 02 CD 00 BE 5F 26 2E 8A 
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58 80 EA 01 E8 7B 05 50 56 EB 02 
                CC 00 BE 7E 26 2E 8A 04 3C 00 74 07 
                46 B4 0E CD 10 EB F2 5E 58 B2 1B B6 
                0C E8 5B 05 50 56 EB 02 CD 00 BE 9E 
                26 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58 80 EA 01 E8 3C 05 50 
                56 EB 02 CD 00 BE BD 26 2E 8A 04 3C 
                00 74 07 46 B4 0E CD 10 EB F2 5E 58 
                80 EA 01 E8 1D 05 50 56 EB 02 CD 00 
                BE DC 26 2E 8A 04 3C 00 74 07 46 B4 
                0E CD 10 EB F2 5E 58 B2 0D B6 15 E8 
                FD 04 B9 01 00 B7 00 B3 40 B0 20 B4 
                09 CD 10 B4 02 B7 00 CD 10 50 56 EB 
                02 D8 00 BE 0F 27 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58 B2 0E 
                B6 11 E8 CA 04 B9 01 00 B7 00 B3 40 
                B0 20 B4 09 CD 10 B4 02 B7 00 CD 10 
                50 56 EB 02 B1 00 BE 42 27 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58 B2 0F B6 0A E8 97 04 B9 01 00 B7 
                00 B3 50 B0 20 B4 09 CD 10 B4 02 B7 
                00 CD 10 50 56 EB 02 B1 00 BE 75 27 
                2E 8A 04 3C 00 74 07 46 B4 0E CD 10 
                EB F2 5E 58 B2 18 B6 06 E8 64 04 B9 
                01 00 B7 00 B3 30 B0 20 B4 09 CD 10 
                B4 02 B7 00 CD 10 50 56 EB 02 B1 00 
                BE A8 27 2E 8A 04 3C 00 74 07 46 B4 
                0E CD 10 EB F2 5E 58 B2 33 B6 13 E8 
                31 04 B9 01 00 B7 00 B3 60 B0 20 B4 
                09 CD 10 B4 02 B7 00 CD 10 50 56 EB 
                02 B1 00 BE DB 27 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58 B2 3C 
                B6 02 E8 FE 03 B9 01 00 B7 00 B3 20 
                B0 20 B4 09 CD 10 B4 02 B7 00 CD 10 
                50 56 EB 02 B1 00 BE 0E 28 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58 B2 3F B6 12 E8 CB 03 50 56 EB 0A 
                3A 29 20 2D 3E 20 59 4F 55 00 BE 2E 
                28 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58 80 C6 01 80 C2 01 E8 
                A1 03 50 56 EB 02 D8 00 BE 58 28 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 C2 02 E8 82 03 50 56 EB 
                09 2D 3E 20 41 20 4B 45 59 00 BE 77 
                28 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58 80 C6 01 80 EA 02 E8 
                59 03 50 56 EB 02 B1 00 BE A0 28 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 C2 02 E8 3A 03 50 56 EB 
                0A 2D 3E 20 41 20 44 4F 4F 52 00 BE 
                BF 28 2E 8A 04 3C 00 74 07 46 B4 0E 
                CD 10 EB F2 5E 58 80 C6 01 80 EA 03 
                E8 10 03 50 56 EB 0C 52 45 44 6B 65 
                79 20 6F 70 65 6E 00 BE E9 28 2E 8A 
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58 80 C6 01 E8 E7 02 50 56 EB 08 
                52 45 44 64 6F 6F 72 00 BE 12 29 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58 80 C6 01 E8 C2 02 B9 01 00 
                B7 00 B3 40 B0 20 B4 09 CD 10 B4 02 
                B7 00 CD 10 50 56 EB 02 D8 00 BE 4A 
                29 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58 80 C2 02 E8 90 02 50 
                56 EB 06 2D 2D 2D 2D 3E 00 BE 69 29 
                2E 8A 04 3C 00 74 07 46 B4 0E CD 10 
                EB F2 5E 58 80 C2 06 E8 6D 02 B9 01 
                00 B7 00 B3 40 B0 20 B4 09 CD 10 B4 
                02 B7 00 CD 10 50 56 EB 02 B1 00 BE 
                9F 29 2E 8A 04 3C 00 74 07 46 B4 0E 
                CD 10 EB F2 5E 58 B2 13 B6 11 E8 3A 
                02 50 56 EB 02 01 00 BE BF 29 2E 8A 
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58 B2 02 B6 15 E8 1A 02 50 56 EB 
                03 3A 29 00 BE DF 29 2E 8A 04 3C 00 
                74 07 46 B4 0E CD 10 EB F2 5E 58 EB 
                00                                  
[  47]        :                                       
[  48]        :                                       
[  49]        :                                       
[  50]    29F7:                                       init_var:
[  51]    29F7: 6E                                    ColliderDetected DB 'n';switched to 'y' if a collision is detected
[  52]        :                                       
[  53]    29F8: 6E                                    IsGreen DB 'n';switched to 'y' if the green key is collected
[  54]        :                                       
[  55]        :                                       
[  56]    29F9: 00 00                                 EE_eggs Dw 0 ;number of egg picked up
[  57]        :                                       
[  58]    29FB: 01 00                                 Event_key Dw 1 ;avoid key event duplication
[  59]    29FD: 00 00                                 whichKey Dw 0;door opening variable / if player has the right key
[  60]    29FF: 00 00                                 MovesCount Dw 0;stores how many moves that you make before finishing the maze
[  61]        :                                       
[  62]        :                                       ;stores the player's last position
[  63]    2A01: 01                                    DhPlayer Db 1
[  64]    2A02: 01                                    DlPlayer Db 1
[  65]        :                                       
[  66]    2A03: B2 02                                 mov dl, 2 ; column
[  67]    2A05: B6 15                                 mov dh, 21 ; row
[  68]        :                                       
[  69]        :                                       
[  70]    2A07: EB 00                                 jmp inside_loop
[  71]        :                                       
[  72]    2A09:                                       main:
[  73]        :                                       
[  74]        :                                       
[  75]        :                                       
[  76]        :                                       
[  77]        :                                       
[  78]        :                                       
[  79]    2A09:                                       inside_loop:
[  80]        :                                       ;set ColliderDetected to its default state:
[  81]    2A09: C6 06 F7 29 6E                        mov ColliderDetected,'n'
[  82]        :                                       
[  83]        :                                       ;wait for a key to be pressed:
[  84]    2A0E: B4 00                                 mov ah, 0h
[  85]    2A10: CD 16                                 int 16h
[  86]        :                                       
[  87]        :                                       ;controls with ZQSD
[  88]    2A12: 3C 73                                 cmp al, 115  ;if "s"
[  89]    2A14: 75 03 E9 72 01                        je Down
[  90]        :                                       
[  91]        :                                       
[  92]    2A19: 3C 7A                                 cmp al, 122  ;if "z"
[  93]    2A1B: 75 03 E9 01 01                        je Up
[  94]        :                                       
[  95]        :                                       
[  96]    2A20: 3C 71                                 cmp al, 113   ;if "q"
[  97]    2A22: 75 03 E9 82 00                        je Left
[  98]        :                                       
[  99]        :                                       
[ 100]    2A27: 3C 64                                 cmp al, 100   ;if "d"
[ 101]    2A29: 74 23                                 je Right
[ 102]        :                                       
[ 103]        :                                       ;controls with arrows
[ 104]        :                                       
[ 105]    2A2B: 80 FC 50                              cmp ah, 50h  ;if downarrow
[ 106]    2A2E: 75 03 E9 58 01                        je Down
[ 107]        :                                       
[ 108]        :                                       
[ 109]    2A33: 80 FC 48                              cmp ah, 48h   ;if uparrow
[ 110]    2A36: 75 03 E9 E6 00                        je Up
[ 111]        :                                       
[ 112]        :                                       
[ 113]    2A3B: 80 FC 4B                              cmp ah, 4Bh  ;if leftarrow
[ 114]    2A3E: 74 69                                 je Left
[ 115]        :                                       
[ 116]        :                                       
[ 117]    2A40: 80 FC 4D                              cmp ah, 4Dh  ;if rightarrow
[ 118]    2A43: 74 09                                 je Right
[ 119]        :                                       
[ 120]        :                                       ;other
[ 121]    2A45: 3C 1B                                 cmp al, 27 ;if "esc":
[ 122]    2A47: 75 03 E9 B6 0A                        je give_up
[ 123]        :                                       
[ 124]    2A4C: EB BB                                 jmp main
[ 125]        :                                       
[ 126]        :                                       
[ 127]        :                                       
[ 128]    2A4E:                                       Right:
[ 129]    2A4E: 80 C2 02                              add dl, 2
[ 130]    2A51: E8 A1 01                              call SetCursor
[ 131]    2A54: E8 A5 01                              call TestColid
[ 132]    2A57: 80 EA 02                              sub dl,2
[ 133]    2A5A: E8 98 01                              call SetCursor
[ 134]        :                                       ;test if a collision is detected:
[ 135]    2A5D: 80 3E F7 29 79                        cmp ColliderDetected,'y'
[ 136]    2A62: 74 A5                                 je main
[ 137]        :                                       ;if not move the player to his new location:
[ 138]    2A64: E8 A2 0E                              call clear_player
[ 139]    2A67: 80 C2 01                              add dl,1
[ 140]    2A6A: E8 88 01                              call SetCursor
[ 141]    2A6D: B7 00                                 mov bh, 0
[ 142]    2A6F: B4 02                                 mov ah, 0x2
[ 143]    2A71: CD 10                                 int 0x10
[ 144]    2A73: B9 02 00                              mov cx, 2 ; nb char
[ 145]    2A76: B7 00                                 mov bh, 0
[ 146]    2A78: B3 19                                 mov bl, 0x19 ; color
[ 147]    2A7A: B0 20                                 mov al, 0x20 ; blank char
[ 148]    2A7C: B4 09                                 mov ah, 0x9
[ 149]    2A7E: CD 10                                 int 0x10
[ 150]    2A80: B4 02                                 mov ah, 02h
[ 151]    2A82: B7 00                                 mov bh, 00
[ 152]    2A84: CD 10                                 int 10h
[ 153]        :                                       
[ 154]    2A86: 50 56 EB 03 3A 29 00 BE 8A 2A 2E 8A   PRINT ':)'
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58                               
[ 155]    2AA0: 83 06 FF 29 01                        add MovesCount,1
[ 156]    2AA5: E9 61 FF                              jmp main
[ 157]    2AA8: C3                                    ret
[ 158]        :                                       
[ 159]        :                                       
[ 160]    2AA9:                                       Left:
[ 161]    2AA9: 80 EA 01                              sub dl, 1
[ 162]    2AAC: E8 46 01                              call SetCursor
[ 163]    2AAF: E8 4A 01                              call TestColid
[ 164]    2AB2: 80 C2 01                              add dl,1
[ 165]    2AB5: E8 3D 01                              call SetCursor
[ 166]        :                                       ;moves the rotates player's head:
[ 167]    2AB8: 50 56 EB 03 28 3A 00 BE BC 2A 2E 8A   PRINT '(:'
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58                               
[ 168]        :                                       ;test if a collision is detected:
[ 169]    2AD2: 80 3E F7 29 79                        cmp ColliderDetected,'y'
[ 170]    2AD7: 75 03 E9 2D FF                        je main
[ 171]        :                                       ;if not move the player to his new location:
[ 172]    2ADC: E8 2A 0E                              call clear_player
[ 173]    2ADF: 80 EA 01                              sub dl,1
[ 174]    2AE2: E8 10 01                              call SetCursor
[ 175]    2AE5: B7 00                                 mov bh, 0
[ 176]    2AE7: B4 02                                 mov ah, 0x2
[ 177]    2AE9: CD 10                                 int 0x10
[ 178]    2AEB: B9 02 00                              mov cx, 2 ; nb char
[ 179]    2AEE: B7 00                                 mov bh, 0
[ 180]    2AF0: B3 19                                 mov bl, 0x19 ; color
[ 181]    2AF2: B0 20                                 mov al, 0x20 ; blank char
[ 182]    2AF4: B4 09                                 mov ah, 0x9
[ 183]    2AF6: CD 10                                 int 0x10
[ 184]    2AF8: B4 02                                 mov ah, 02h
[ 185]    2AFA: B7 00                                 mov bh, 00
[ 186]    2AFC: CD 10                                 int 10h
[ 187]        :                                       
[ 188]    2AFE: 50 56 EB 03 28 3A 00 BE 02 2B 2E 8A   PRINT '(:'
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58                               
[ 189]    2B18: 83 06 FF 29 01                        add MovesCount,1
[ 190]    2B1D: E9 E9 FE                              jmp main
[ 191]    2B20: C3                                    ret
[ 192]        :                                       
[ 193]    2B21:                                       Up:
[ 194]    2B21: 80 EE 01                              sub dh, 1
[ 195]    2B24: E8 CE 00                              call SetCursor
[ 196]    2B27: E8 D2 00                              call TestColid
[ 197]    2B2A: 80 C2 01                              add dl,1
[ 198]    2B2D: E8 C5 00                              call SetCursor
[ 199]    2B30: E8 C9 00                              call TestColid
[ 200]    2B33: 80 EA 01                              sub dl,1
[ 201]    2B36: 80 C6 01                              add dh,1
[ 202]    2B39: E8 B9 00                              call SetCursor
[ 203]        :                                       ;test if a collision is detected:
[ 204]    2B3C: 80 3E F7 29 79                        cmp ColliderDetected,'y'
[ 205]    2B41: 75 03 E9 C3 FE                        je main
[ 206]        :                                       ;if not move the player to his new location:
[ 207]    2B46: E8 C0 0D                              call clear_player
[ 208]    2B49: 80 EE 01                              sub dh,1
[ 209]    2B4C: E8 A6 00                              call SetCursor
[ 210]    2B4F: B7 00                                 mov bh, 0
[ 211]    2B51: B4 02                                 mov ah, 0x2
[ 212]    2B53: CD 10                                 int 0x10
[ 213]    2B55: B9 02 00                              mov cx, 2 ; nb char
[ 214]    2B58: B7 00                                 mov bh, 0
[ 215]    2B5A: B3 19                                 mov bl, 0x19 ; color
[ 216]    2B5C: B0 20                                 mov al, 0x20 ; blank char
[ 217]    2B5E: B4 09                                 mov ah, 0x9
[ 218]    2B60: CD 10                                 int 0x10
[ 219]    2B62: B4 02                                 mov ah, 02h
[ 220]    2B64: B7 00                                 mov bh, 00
[ 221]    2B66: CD 10                                 int 10h
[ 222]        :                                       
[ 223]    2B68: 50 56 EB 03 3A 29 00 BE 6C 2B 2E 8A   PRINT ':)'
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58                               
[ 224]    2B82: 83 06 FF 29 01                        add MovesCount,1
[ 225]    2B87: E9 7F FE                              jmp main
[ 226]    2B8A: C3                                    ret
[ 227]        :                                       
[ 228]    2B8B:                                       Down:
[ 229]    2B8B: 80 C6 01                              add dh, 1
[ 230]    2B8E: E8 64 00                              call SetCursor
[ 231]    2B91: E8 68 00                              call TestColid
[ 232]    2B94: 80 C2 01                              add dl,1
[ 233]    2B97: E8 5B 00                              call SetCursor
[ 234]    2B9A: E8 5F 00                              call TestColid
[ 235]    2B9D: 80 EA 01                              sub dl,1
[ 236]    2BA0: 80 EE 01                              sub dh,1
[ 237]    2BA3: E8 4F 00                              call SetCursor
[ 238]        :                                       ;test if a collision is detected:
[ 239]    2BA6: 80 3E F7 29 79                        cmp ColliderDetected,'y'
[ 240]    2BAB: 75 03 E9 59 FE                        je main
[ 241]        :                                       ;if not move the player to his new location:
[ 242]    2BB0: E8 56 0D                              call clear_player
[ 243]    2BB3: 80 C6 01                              add dh,1
[ 244]    2BB6: E8 3C 00                              call SetCursor
[ 245]    2BB9: B7 00                                 mov bh, 0
[ 246]    2BBB: B4 02                                 mov ah, 0x2
[ 247]    2BBD: CD 10                                 int 0x10
[ 248]    2BBF: B9 02 00                              mov cx, 2 ; nb char
[ 249]    2BC2: B7 00                                 mov bh, 0
[ 250]    2BC4: B3 19                                 mov bl, 0x19 ; color
[ 251]    2BC6: B0 20                                 mov al, 0x20 ; blank char
[ 252]    2BC8: B4 09                                 mov ah, 0x9
[ 253]    2BCA: CD 10                                 int 0x10
[ 254]    2BCC: B4 02                                 mov ah, 02h
[ 255]    2BCE: B7 00                                 mov bh, 00
[ 256]    2BD0: CD 10                                 int 10h
[ 257]        :                                       
[ 258]    2BD2: 50 56 EB 03 3A 29 00 BE D6 2B 2E 8A   PRINT ':)'
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58                               
[ 259]    2BEC: 83 06 FF 29 01                        add MovesCount,1
[ 260]    2BF1: E9 15 FE                              jmp main
[ 261]    2BF4: C3                                    ret
[ 262]        :                                       
[ 263]    2BF5:                                       SetCursor:
[ 264]        :                                       ;update the cursor position:
[ 265]    2BF5: B4 02                                 mov ah, 02h
[ 266]    2BF7: B7 00                                 mov bh, 00
[ 267]    2BF9: CD 10                                 int 10h
[ 268]    2BFB: C3                                    ret
[ 269]    2BFC:                                       TestColid:
[ 270]        :                                       ;tests if next character is a "blacklist" one:
[ 271]    2BFC: B4 08                                 mov ah, 08h
[ 272]    2BFE: CD 10                                 int 10h
[ 273]        :                                       
[ 274]    2C00: 3C CE                                 cmp al,206
[ 275]    2C02: 74 46                                 je CollidYes
[ 276]        :                                       
[ 277]    2C04: 3C BC                                 cmp al,188
[ 278]    2C06: 74 42                                 je CollidYes
[ 279]        :                                       
[ 280]    2C08: 3C CB                                 cmp al,203
[ 281]    2C0A: 74 3E                                 je CollidYes
[ 282]        :                                       
[ 283]    2C0C: 3C BB                                 cmp al,187
[ 284]    2C0E: 74 3A                                 je CollidYes
[ 285]        :                                       
[ 286]    2C10: 3C C8                                 cmp al,200
[ 287]    2C12: 74 36                                 je CollidYes
[ 288]        :                                       
[ 289]    2C14: 3C C9                                 cmp al,201
[ 290]    2C16: 74 32                                 je CollidYes
[ 291]        :                                       
[ 292]    2C18: 3C CC                                 cmp al,204
[ 293]    2C1A: 74 2E                                 je CollidYes
[ 294]        :                                       
[ 295]    2C1C: 3C C8                                 cmp al,200
[ 296]    2C1E: 74 2A                                 je CollidYes
[ 297]        :                                       
[ 298]    2C20: 3C CA                                 cmp al,202
[ 299]    2C22: 74 26                                 je CollidYes
[ 300]        :                                       
[ 301]    2C24: 3C B9                                 cmp al,185
[ 302]    2C26: 74 22                                 je CollidYes
[ 303]        :                                       ;horizontal wall
[ 304]    2C28: 3C CD                                 cmp al,205
[ 305]    2C2A: 74 1E                                 je CollidYes
[ 306]        :                                       
[ 307]        :                                       ;vertical wall
[ 308]    2C2C: 3C BA                                 cmp al,186
[ 309]    2C2E: 74 1A                                 je CollidYes
[ 310]        :                                       
[ 311]        :                                       ;EEguy
[ 312]    2C30: 3C 01                                 cmp al,001
[ 313]    2C32: 75 03 E9 82 00                        je EasterEgg_Activate
[ 314]        :                                       
[ 315]        :                                       ;door
[ 316]    2C37: 3C B1                                 cmp al,177
[ 317]    2C39: 75 03 E9 80 02                        je keytest
[ 318]        :                                       
[ 319]    2C3E:                                       eggs:
[ 320]    2C3E: 3C F8                                 cmp al,248
[ 321]    2C40: 74 0E                                 je eggs_collected
[ 322]        :                                       
[ 323]        :                                       ;key
[ 324]    2C42: 3C D8                                 cmp al,216
[ 325]    2C44: 75 03 E9 CB 02                        je objectpickup
[ 326]        :                                       
[ 327]    2C49: C3                                    ret
[ 328]        :                                       
[ 329]        :                                       
[ 330]    2C4A:                                       CollidYes:
[ 331]    2C4A: C6 06 F7 29 79                        mov ColliderDetected,'y'
[ 332]    2C4F: C3                                    ret
[ 333]        :                                       
[ 334]    2C50:                                       eggs_collected:
[ 335]        :                                       
[ 336]        :                                       
[ 337]        :                                       
[ 338]    2C50: 83 06 F9 29 01                        add EE_eggs,1
[ 339]        :                                       
[ 340]        :                                       
[ 341]    2C55: E8 5D 0B                              call Save_PlayerLoc
[ 342]    2C58: E8 F8 0A                              call clear_oldmessage
[ 343]    2C5B: B2 3E                                 mov dl,62
[ 344]    2C5D: B6 06                                 mov dh,6
[ 345]    2C5F: E8 93 FF                              call SetCursor
[ 346]        :                                       
[ 347]        :                                       ;message to let you know you collected an object:
[ 348]    2C62: 50 56 EB 0A 59 6F 75 20 66 6F 75 6E   PRINT 'You found'
                64 00 BE 66 2C 2E 8A 04 3C 00 74 07 
                46 B4 0E CD 10 EB F2 5E 58          
[ 349]    2C83: B2 3E                                 mov dl,62
[ 350]    2C85: B6 07                                 mov dh,7
[ 351]    2C87: E8 6B FF                              call SetCursor
[ 352]        :                                       
[ 353]    2C8A: 50 56 EB 0A 61 6E 20 65 67 67 20 3A   PRINT 'an egg :D'
                44 00 BE 8E 2C 2E 8A 04 3C 00 74 07 
                46 B4 0E CD 10 EB F2 5E 58          
[ 354]        :                                       
[ 355]        :                                       
[ 356]    2CAB: E8 10 0B                              call Load_PlayerLoc
[ 357]        :                                       
[ 358]        :                                       
[ 359]        :                                       ;check if all the eggs have been picked up:
[ 360]    2CAE: 83 3E F9 29 0D                        cmp EE_eggs,13
[ 361]    2CB3: 75 03 E9 B4 09                        je win_EE
[ 362]    2CB8: C3                                    ret
[ 363]    2CB9:                                       EasterEgg_Activate:
[ 364]    2CB9: E8 8E FF                              call CollidYes
[ 365]    2CBC: E8 F6 0A                              call Save_PlayerLoc
[ 366]    2CBF: E8 91 0A                              call clear_oldmessage
[ 367]    2CC2: B2 3E                                 mov dl,62
[ 368]    2CC4: B6 06                                 mov dh,6
[ 369]    2CC6: E8 2C FF                              call SetCursor
[ 370]        :                                       
[ 371]        :                                       ;Display dialog from the EE_guy :
[ 372]    2CC9: 50 56 EB 0C 48 65 6C 6C 6F 20 63 61   PRINT 'Hello can u';lack of spelling voluntary:
                6E 20 75 00 BE CD 2C 2E 8A 04 3C 00 
                74 07 46 B4 0E CD 10 EB F2 5E 58    
[ 373]    2CEC: B2 3E                                 mov dl,62
[ 374]    2CEE: B6 07                                 mov dh,7
[ 375]    2CF0: E8 02 FF                              call SetCursor
[ 376]        :                                       
[ 377]    2CF3: 50 56 EB 10 46 69 6E 64 20 6D 79 20   PRINT 'Find my eggs?:P'
                65 67 67 73 3F 3A 50 00 BE F7 2C 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58                            
[ 378]        :                                       
[ 379]        :                                       include "EE.asm"
[ 380]    2EBA: E8 01 09                              call Load_PlayerLoc
[ 381]    2EBD: C3                                    ret
[ 382]        :                                       
[ 383]        :                                       
[ 384]    2EBE:                                       keytest:
[ 385]        :                                       ;checks what key we have:
[ 386]    2EBE:                                       nokeytest:;look at first if you have a key
[ 387]    2EBE: 83 3E FD 29 00                        cmp whichKey,0
[ 388]    2EC3: 75 03 E9 BD 02                        je display_nokeymessage
[ 389]    2EC8: EB 00                                 jmp redkeytest
[ 390]        :                                       
[ 391]        :                                       ;test all key value:
[ 392]    2ECA:                                       redkeytest:
[ 393]        :                                       
[ 394]    2ECA: 83 3E FD 29 01                        cmp whichKey,1
[ 395]    2ECF: 75 03 E9 13 03                        je opendoor1
[ 396]    2ED4: EB 00                                 jmp bluekeytest
[ 397]        :                                       
[ 398]        :                                       
[ 399]        :                                       
[ 400]        :                                       
[ 401]        :                                       
[ 402]    2ED6:                                       bluekeytest:
[ 403]        :                                       
[ 404]        :                                       
[ 405]    2ED6: 83 3E FD 29 02                        cmp whichKey,2
[ 406]    2EDB: 75 03 E9 A6 03                        je opendoor2
[ 407]    2EE0: EB 00                                 jmp yellowkeytest
[ 408]        :                                       
[ 409]        :                                       
[ 410]    2EE2:                                       yellowkeytest:
[ 411]        :                                       
[ 412]        :                                       
[ 413]    2EE2: 83 3E FD 29 03                        cmp whichKey,3
[ 414]    2EE7: 75 03 E9 3D 04                        je opendoor3
[ 415]        :                                       
[ 416]    2EEC: EB 00                                 jmp OrangeAndGreenkeytest
[ 417]        :                                       
[ 418]        :                                       
[ 419]    2EEE:                                       OrangeAndGreenkeytest:
[ 420]        :                                       
[ 421]        :                                       
[ 422]    2EEE: 83 3E FD 29 04                        cmp whichKey,4
[ 423]    2EF3: 74 09                                 je GreenOrOrange
[ 424]        :                                       
[ 425]    2EF5: 83 3E FD 29 05                        cmp whichKey,5
[ 426]    2EFA: 74 02                                 je GreenOrOrange
[ 427]    2EFC: EB 15                                 jmp havenokey
[ 428]        :                                       
[ 429]    2EFE:                                       GreenOrOrange:
[ 430]    2EFE: 80 FA 3C                              cmp dl,60
[ 431]    2F01: 74 03                                 je isthatgreen
[ 432]    2F03: E9 C3 04                              jmp opendoor4
[ 433]        :                                       
[ 434]    2F06:                                       isthatgreen:
[ 435]        :                                       ;verify if the boolean "IsGreen" is true:
[ 436]    2F06: 80 3E F8 29 79                        cmp IsGreen,'y'
[ 437]    2F0B: 75 03 E9 91 05                        je opendoor5
[ 438]        :                                       
[ 439]        :                                       
[ 440]        :                                       
[ 441]        :                                       
[ 442]    2F10: E9 72 02                              jmp display_nokeymessage
[ 443]    2F13:                                       havenokey:
[ 444]    2F13: C3                                    ret
[ 445]        :                                       
[ 446]        :                                       
[ 447]        :                                       
[ 448]        :                                       
[ 449]    2F14:                                       objectpickup:
[ 450]        :                                       ;look at what key we have picked up:
[ 451]    2F14:                                       key1check:
[ 452]    2F14: 83 3E FB 29 01                        cmp Event_key,1
[ 453]    2F19: 74 29                                 je key1pickup
[ 454]        :                                       
[ 455]    2F1B:                                       key2check:
[ 456]    2F1B: 83 3E FB 29 02                        cmp Event_key,2
[ 457]    2F20: 75 03 E9 90 00                        je key2pickup
[ 458]    2F25:                                       key3check:
[ 459]    2F25: 83 3E FB 29 03                        cmp Event_key,3
[ 460]    2F2A: 75 03 E9 F8 00                        je key3pickup
[ 461]        :                                       
[ 462]    2F2F:                                       key4check:
[ 463]    2F2F: 83 3E FB 29 04                        cmp Event_key,4
[ 464]    2F34: 75 03 E9 60 01                        je key4pickup
[ 465]        :                                       
[ 466]        :                                       
[ 467]        :                                       
[ 468]    2F39:                                       key5check:
[ 469]    2F39: 83 3E FB 29 05                        cmp Event_key,5
[ 470]    2F3E: 75 03 E9 CA 01                        je key5pickup
[ 471]        :                                       
[ 472]        :                                       
[ 473]    2F43: C3                                    ret
[ 474]    2F44:                                       key1pickup:
[ 475]    2F44: E8 6E 08                              call Save_PlayerLoc
[ 476]    2F47: E8 09 08                              call clear_oldmessage
[ 477]    2F4A: B2 3E                                 mov dl,62
[ 478]    2F4C: B6 06                                 mov dh,6
[ 479]    2F4E: E8 A4 FC                              call SetCursor
[ 480]        :                                       
[ 481]        :                                       ;message to let you know you collected an object:
[ 482]    2F51: 50 56 EB 0F 59 6F 75 20 68 61 76 65   PRINT 'You have found'
                20 66 6F 75 6E 64 00 BE 55 2F 2E 8A 
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58                               
[ 483]    2F77: B2 3E                                 mov dl,62
[ 484]    2F79: B6 07                                 mov dh,7
[ 485]    2F7B: E8 77 FC                              call SetCursor
[ 486]        :                                       
[ 487]    2F7E: 50 56 EB 0A 20 61 20 72 65 64 6B 65   PRINT ' a redkey'
                79 00 BE 82 2F 2E 8A 04 3C 00 74 07 
                46 B4 0E CD 10 EB F2 5E 58          
[ 488]        :                                       
[ 489]        :                                       ;store this information in a variable:
[ 490]    2F9F: C7 06 FD 29 01 00                     mov whichKey,1
[ 491]    2FA5: E8 1F 08                              call UpdateInv ;to update the inventory:
[ 492]        :                                       ;return the cursor to its original position:
[ 493]    2FA8: E8 13 08                              call Load_PlayerLoc
[ 494]    2FAB: E8 47 FC                              call SetCursor
[ 495]    2FAE: C7 06 FB 29 02 00                     mov Event_key,2
[ 496]    2FB4: C3                                    ret
[ 497]        :                                       
[ 498]    2FB5:                                       key2pickup:
[ 499]    2FB5: E8 FD 07                              call Save_PlayerLoc
[ 500]    2FB8: E8 98 07                              call clear_oldmessage
[ 501]    2FBB: B2 3E                                 mov dl,62
[ 502]    2FBD: B6 06                                 mov dh,6
[ 503]    2FBF: E8 33 FC                              call SetCursor
[ 504]        :                                       
[ 505]        :                                       ;message to let you know you collected an object:
[ 506]    2FC2: 50 56 EB 0F 59 6F 75 20 68 61 76 65   PRINT 'You have found'
                20 66 6F 75 6E 64 00 BE C6 2F 2E 8A 
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58                               
[ 507]    2FE8: B2 3E                                 mov dl,62
[ 508]    2FEA: B6 07                                 mov dh,7
[ 509]    2FEC: E8 06 FC                              call SetCursor
[ 510]        :                                       
[ 511]    2FEF: 50 56 EB 0B 20 61 20 70 69 6E 6B 6B   PRINT ' a pinkkey'
                65 79 00 BE F3 2F 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58       
[ 512]        :                                       ;store this information in a variable:
[ 513]    3011: C7 06 FD 29 02 00                     mov whichKey,2
[ 514]    3017: E8 AD 07                              call UpdateInv ;to update the inventory:
[ 515]        :                                       ;return the cursor to its original position:
[ 516]    301A: E8 A1 07                              call Load_PlayerLoc
[ 517]    301D: E8 D5 FB                              call SetCursor
[ 518]    3020: C7 06 FB 29 03 00                     mov Event_key,3
[ 519]    3026: C3                                    ret
[ 520]        :                                       
[ 521]        :                                       
[ 522]    3027:                                       key3pickup:
[ 523]    3027: E8 8B 07                              call Save_PlayerLoc
[ 524]    302A: E8 26 07                              call clear_oldmessage
[ 525]    302D: B2 3E                                 mov dl,62
[ 526]    302F: B6 06                                 mov dh,6
[ 527]    3031: E8 C1 FB                              call SetCursor
[ 528]        :                                       
[ 529]        :                                       ;message to let you know you collected an object:
[ 530]    3034: 50 56 EB 0F 59 6F 75 20 68 61 76 65   PRINT 'You have found'
                20 66 6F 75 6E 64 00 BE 38 30 2E 8A 
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58                               
[ 531]    305A: B2 3E                                 mov dl,62
[ 532]    305C: B6 07                                 mov dh,7
[ 533]    305E: E8 94 FB                              call SetCursor
[ 534]        :                                       
[ 535]    3061: 50 56 EB 0B 20 61 20 62 6C 75 65 6B   PRINT ' a bluekey'
                65 79 00 BE 65 30 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58       
[ 536]        :                                       ;store this information in a variable:
[ 537]    3083: C7 06 FD 29 03 00                     mov whichKey,3
[ 538]    3089: E8 3B 07                              call UpdateInv  ;to update the inventory:
[ 539]        :                                       ;return the cursor to its original position:
[ 540]    308C: E8 2F 07                              call Load_PlayerLoc
[ 541]    308F: E8 63 FB                              call SetCursor
[ 542]    3092: C7 06 FB 29 04 00                     mov Event_key,4
[ 543]    3098: C3                                    ret
[ 544]        :                                       
[ 545]        :                                       
[ 546]    3099:                                       key4pickup:
[ 547]    3099: E8 19 07                              call Save_PlayerLoc
[ 548]    309C: E8 B4 06                              call clear_oldmessage
[ 549]    309F: B2 3E                                 mov dl,62
[ 550]    30A1: B6 06                                 mov dh,6
[ 551]    30A3: E8 4F FB                              call SetCursor
[ 552]        :                                       
[ 553]        :                                       ;message to let you know you collected an object:
[ 554]    30A6: 50 56 EB 0F 59 6F 75 20 68 61 76 65   PRINT 'You have found'
                20 66 6F 75 6E 64 00 BE AA 30 2E 8A 
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58                               
[ 555]    30CC: B2 3E                                 mov dl,62
[ 556]    30CE: B6 07                                 mov dh,7
[ 557]    30D0: E8 22 FB                              call SetCursor
[ 558]        :                                       
[ 559]    30D3: 50 56 EB 0D 20 61 20 4F 72 61 6E 67   PRINT ' a Orangekey'
                65 6B 65 79 00 BE D7 30 2E 8A 04 3C 
                00 74 07 46 B4 0E CD 10 EB F2 5E 58 
                                                    
[ 560]        :                                       ;store this information in a variable:
[ 561]    30F7: C7 06 FD 29 04 00                     mov whichKey,4
[ 562]    30FD: E8 C7 06                              call UpdateInv  ;to update the inventory:
[ 563]        :                                       ;return the cursor to its original position:
[ 564]    3100: E8 BB 06                              call Load_PlayerLoc
[ 565]    3103: E8 EF FA                              call SetCursor
[ 566]    3106: C7 06 FB 29 05 00                     mov Event_key,5
[ 567]    310C: C3                                    ret
[ 568]        :                                       
[ 569]    310D:                                       key5pickup:
[ 570]    310D: E8 A5 06                              call Save_PlayerLoc
[ 571]    3110: E8 40 06                              call clear_oldmessage
[ 572]    3113: B2 3E                                 mov dl,62
[ 573]    3115: B6 06                                 mov dh,6
[ 574]    3117: E8 DB FA                              call SetCursor
[ 575]        :                                       
[ 576]        :                                       ;message to let you know you collected an object:
[ 577]    311A: 50 56 EB 0F 59 6F 75 20 68 61 76 65   PRINT 'You have found'
                20 66 6F 75 6E 64 00 BE 1E 31 2E 8A 
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58                               
[ 578]    3140: B2 3E                                 mov dl,62
[ 579]    3142: B6 07                                 mov dh,7
[ 580]    3144: E8 AE FA                              call SetCursor
[ 581]        :                                       
[ 582]    3147: 50 56 EB 0C 20 61 20 47 72 65 65 6E   PRINT ' a Greenkey'
                6B 65 79 00 BE 4B 31 2E 8A 04 3C 00 
                74 07 46 B4 0E CD 10 EB F2 5E 58    
[ 583]        :                                       ;store this information in a variable:
[ 584]    316A: C7 06 FD 29 05 00                     mov whichKey,5
[ 585]    3170: C6 06 F8 29 79                        mov IsGreen,'y';indicates that the green key has been picked up
[ 586]    3175: E8 4F 06                              call UpdateInv ;to update the inventory:
[ 587]        :                                       ;return the cursor to its original position:
[ 588]    3178: E8 43 06                              call Load_PlayerLoc
[ 589]    317B: E8 77 FA                              call SetCursor
[ 590]    317E: C7 06 FB 29 06 00                     mov Event_key,6
[ 591]    3184: C3                                    ret
[ 592]        :                                       
[ 593]    3185:                                       display_nokeymessage:
[ 594]        :                                       
[ 595]        :                                       ;prevents the opening of the door if the player does not have the right key:
[ 596]    3185: E8 C2 FA                              call CollidYes
[ 597]    3188: E8 2A 06                              call Save_PlayerLoc
[ 598]    318B: E8 C5 05                              call clear_oldmessage
[ 599]    318E: B2 3E                                 mov dl,62
[ 600]    3190: B6 06                                 mov dh,6
[ 601]    3192: E8 60 FA                              call SetCursor
[ 602]        :                                       
[ 603]    3195: 50 56 EB 0A 77 72 6F 6E 67 20 6B 65   PRINT 'wrong key'
                79 00 BE 99 31 2E 8A 04 3C 00 74 07 
                46 B4 0E CD 10 EB F2 5E 58          
[ 604]    31B6: B2 3E                                 mov dl,62
[ 605]    31B8: B6 07                                 mov dh,7
[ 606]    31BA: E8 38 FA                              call SetCursor
[ 607]        :                                       
[ 608]    31BD: 50 56 EB 0A 20 6F 72 20 6E 6F 6B 65   PRINT ' or nokey'
                79 00 BE C1 31 2E 8A 04 3C 00 74 07 
                46 B4 0E CD 10 EB F2 5E 58          
[ 609]        :                                       
[ 610]        :                                       
[ 611]        :                                       ;return the cursor to its original position:
[ 612]    31DE: E8 DD 05                              call Load_PlayerLoc
[ 613]    31E1: B4 02                                 mov ah, 02h
[ 614]    31E3: E8 0F FA                              call SetCursor
[ 615]        :                                       
[ 616]    31E6: C3                                    ret
[ 617]        :                                       
[ 618]    31E7:                                       opendoor1:
[ 619]    31E7: E8 CB 05                              call Save_PlayerLoc
[ 620]    31EA: E8 66 05                              call clear_oldmessage
[ 621]        :                                       
[ 622]    31ED: B2 3E                                 mov dl,62
[ 623]    31EF: B6 06                                 mov dh,6
[ 624]    31F1: E8 01 FA                              call SetCursor
[ 625]        :                                       
[ 626]    31F4: 50 56 EB 0E 79 6F 75 20 68 61 76 65   PRINT 'you have open'
                20 6F 70 65 6E 00 BE F8 31 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58                                  
[ 627]    3219: B2 3E                                 mov dl,62
[ 628]    321B: B6 07                                 mov dh,7
[ 629]    321D: E8 D5 F9                              call SetCursor
[ 630]        :                                       
[ 631]    3220: 50 56 EB 09 72 65 64 20 64 6F 6F 72   PRINT 'red door'
                00 BE 24 32 2E 8A 04 3C 00 74 07 46 
                B4 0E CD 10 EB F2 5E 58             
[ 632]        :                                       
[ 633]        :                                       
[ 634]    3240: C7 06 FD 29 00 00                     mov whichKey,0
[ 635]        :                                       
[ 636]    3246:                                       draw_purplekey:
[ 637]    3246: B2 11                                 mov dl,17
[ 638]    3248: B6 0C                                 mov dh,12
[ 639]    324A: B7 00                                 mov bh, 0
[ 640]    324C: B4 02                                 mov ah, 0x2
[ 641]    324E: CD 10                                 int 0x10
[ 642]    3250: B9 01 00                              mov cx, 1 ; nb char
[ 643]    3253: B7 00                                 mov bh, 0
[ 644]    3255: B3 50                                 mov bl, 0x50 ; color
[ 645]    3257: B0 20                                 mov al, 0x20 ; blank char
[ 646]    3259: B4 09                                 mov ah, 0x9
[ 647]    325B: CD 10                                 int 0x10
[ 648]    325D: B4 02                                 mov ah, 02h
[ 649]    325F: B7 00                                 mov bh, 00
[ 650]    3261: CD 10                                 int 10h
[ 651]    3263: 50 56 EB 02 D8 00 BE 67 32 2E 8A 04   PRINT 216
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58                                  
[ 652]        :                                       
[ 653]        :                                       ;return the cursor to its original position:
[ 654]    327C: E8 3F 05                              call Load_PlayerLoc
[ 655]    327F: E8 73 F9                              call SetCursor
[ 656]    3282: C3                                    ret
[ 657]    3283: E9 83 F7                              jmp inside_loop
[ 658]        :                                       
[ 659]    3286:                                       opendoor2:
[ 660]    3286: E8 2C 05                              call Save_PlayerLoc
[ 661]    3289: E8 7D 06                              call clear_player
[ 662]    328C: E8 C4 04                              call clear_oldmessage
[ 663]        :                                       
[ 664]    328F: B2 3E                                 mov dl,62
[ 665]    3291: B6 06                                 mov dh,6
[ 666]    3293: E8 5F F9                              call SetCursor
[ 667]        :                                       
[ 668]    3296: 50 56 EB 0E 79 6F 75 20 68 61 76 65   PRINT 'you have open'
                20 6F 70 65 6E 00 BE 9A 32 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58                                  
[ 669]    32BB: B2 3E                                 mov dl,62
[ 670]    32BD: B6 07                                 mov dh,7
[ 671]    32BF: E8 33 F9                              call SetCursor
[ 672]        :                                       
[ 673]    32C2: 50 56 EB 0A 70 69 6E 6B 20 64 6F 6F   PRINT 'pink door'
                72 00 BE C6 32 2E 8A 04 3C 00 74 07 
                46 B4 0E CD 10 EB F2 5E 58          
[ 674]        :                                       
[ 675]        :                                       
[ 676]    32E3: C7 06 FD 29 00 00                     mov whichKey,0
[ 677]    32E9:                                       draw_bluekey:
[ 678]    32E9: B2 0E                                 mov dl,14
[ 679]    32EB: B6 0C                                 mov dh,12
[ 680]    32ED: B7 00                                 mov bh, 0
[ 681]    32EF: B4 02                                 mov ah, 0x2
[ 682]    32F1: CD 10                                 int 0x10
[ 683]    32F3: B9 01 00                              mov cx, 1 ; nb char
[ 684]    32F6: B7 00                                 mov bh, 0
[ 685]    32F8: B3 30                                 mov bl, 0x30 ; color
[ 686]    32FA: B0 20                                 mov al, 0x20 ; blank char
[ 687]    32FC: B4 09                                 mov ah, 0x9
[ 688]    32FE: CD 10                                 int 0x10
[ 689]    3300: B4 02                                 mov ah, 02h
[ 690]    3302: B7 00                                 mov bh, 00
[ 691]    3304: CD 10                                 int 10h
[ 692]    3306: 50 56 EB 02 D8 00 BE 0A 33 2E 8A 04   PRINT 216
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58                                  
[ 693]        :                                       ;return the cursor to its original position:
[ 694]    331F: E8 9C 04                              call Load_PlayerLoc
[ 695]    3322: E8 D0 F8                              call SetCursor
[ 696]    3325: C3                                    ret
[ 697]    3326: E9 E0 F6                              jmp inside_loop
[ 698]        :                                       
[ 699]        :                                       
[ 700]    3329:                                       opendoor3:
[ 701]    3329: E8 89 04                              call Save_PlayerLoc
[ 702]    332C: E8 DA 05                              call clear_player
[ 703]    332F: E8 21 04                              call clear_oldmessage
[ 704]        :                                       
[ 705]    3332: B2 3E                                 mov dl,62
[ 706]    3334: B6 06                                 mov dh,6
[ 707]    3336: E8 BC F8                              call SetCursor
[ 708]        :                                       
[ 709]    3339: 50 56 EB 0E 79 6F 75 20 68 61 76 65   PRINT 'you have open'
                20 6F 70 65 6E 00 BE 3D 33 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58                                  
[ 710]    335E: B2 3E                                 mov dl,62
[ 711]    3360: B6 07                                 mov dh,7
[ 712]    3362: E8 90 F8                              call SetCursor
[ 713]        :                                       
[ 714]    3365: 50 56 EB 0A 62 6C 75 65 20 64 6F 6F   PRINT 'blue door'
                72 00 BE 69 33 2E 8A 04 3C 00 74 07 
                46 B4 0E CD 10 EB F2 5E 58          
[ 715]        :                                       
[ 716]        :                                       
[ 717]    3386: C7 06 FD 29 00 00                     mov whichKey,0
[ 718]    338C:                                       draw_orangekey:
[ 719]    338C: B2 26                                 mov dl,38
[ 720]    338E: B6 0D                                 mov dh,13
[ 721]    3390: B7 00                                 mov bh, 0
[ 722]    3392: B4 02                                 mov ah, 0x2
[ 723]    3394: CD 10                                 int 0x10
[ 724]    3396: B9 01 00                              mov cx, 1 ; nb char
[ 725]    3399: B7 00                                 mov bh, 0
[ 726]    339B: B3 60                                 mov bl, 0x60 ; color
[ 727]    339D: B0 20                                 mov al, 0x20 ; blank char
[ 728]    339F: B4 09                                 mov ah, 0x9
[ 729]    33A1: CD 10                                 int 0x10
[ 730]    33A3: B4 02                                 mov ah, 02h
[ 731]    33A5: B7 00                                 mov bh, 00
[ 732]    33A7: CD 10                                 int 10h
[ 733]    33A9: 50 56 EB 02 D8 00 BE AD 33 2E 8A 04   PRINT 216
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58                                  
[ 734]        :                                       ;return the cursor to its original position:
[ 735]    33C2: E8 F9 03                              call Load_PlayerLoc
[ 736]    33C5: E8 2D F8                              call SetCursor
[ 737]    33C8: C3                                    ret
[ 738]        :                                       
[ 739]    33C9:                                       opendoor4:
[ 740]    33C9: E8 E9 03                              call Save_PlayerLoc
[ 741]    33CC: E8 3A 05                              call clear_player
[ 742]    33CF: E8 81 03                              call clear_oldmessage
[ 743]        :                                       
[ 744]    33D2: B2 3E                                 mov dl,62
[ 745]    33D4: B6 06                                 mov dh,6
[ 746]    33D6: E8 1C F8                              call SetCursor
[ 747]        :                                       
[ 748]    33D9: 50 56 EB 0E 79 6F 75 20 68 61 76 65   PRINT 'you have open'
                20 6F 70 65 6E 00 BE DD 33 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58                                  
[ 749]    33FE: B2 3E                                 mov dl,62
[ 750]    3400: B6 07                                 mov dh,7
[ 751]    3402: E8 F0 F7                              call SetCursor
[ 752]        :                                       
[ 753]    3405: 50 56 EB 0C 4F 72 61 6E 67 65 20 64   PRINT 'Orange door'
                6F 6F 72 00 BE 09 34 2E 8A 04 3C 00 
                74 07 46 B4 0E CD 10 EB F2 5E 58    
[ 754]        :                                       
[ 755]        :                                       
[ 756]    3428: C7 06 FD 29 00 00                     mov whichKey,0
[ 757]    342E:                                       draw_Greenkey:
[ 758]    342E: B2 3C                                 mov dl,60
[ 759]    3430: B6 10                                 mov dh,16
[ 760]    3432: B7 00                                 mov bh, 0
[ 761]    3434: B4 02                                 mov ah, 0x2
[ 762]    3436: CD 10                                 int 0x10
[ 763]    3438: B9 01 00                              mov cx, 1 ; nb char
[ 764]    343B: B7 00                                 mov bh, 0
[ 765]    343D: B3 20                                 mov bl, 0x20 ; color
[ 766]    343F: B0 20                                 mov al, 0x20 ; blank char
[ 767]    3441: B4 09                                 mov ah, 0x9
[ 768]    3443: CD 10                                 int 0x10
[ 769]    3445: B4 02                                 mov ah, 02h
[ 770]    3447: B7 00                                 mov bh, 00
[ 771]    3449: CD 10                                 int 10h
[ 772]    344B: 50 56 EB 02 D8 00 BE 4F 34 2E 8A 04   PRINT 216
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58                                  
[ 773]        :                                       
[ 774]    3464:                                       draw_fixwall:
[ 775]    3464: B2 34                                 mov dl,52
[ 776]    3466: B6 13                                 mov dh,19
[ 777]    3468: B7 00                                 mov bh, 0
[ 778]    346A: B4 02                                 mov ah, 0x2
[ 779]    346C: CD 10                                 int 0x10
[ 780]    346E: B9 01 00                              mov cx, 1 ; nb char
[ 781]    3471: B7 00                                 mov bh, 0
[ 782]    3473: B3 19                                 mov bl, 0x19 ; color
[ 783]    3475: B0 20                                 mov al, 0x20 ; blank char
[ 784]    3477: B4 09                                 mov ah, 0x9
[ 785]    3479: CD 10                                 int 0x10
[ 786]    347B: B4 02                                 mov ah, 02h
[ 787]    347D: B7 00                                 mov bh, 00
[ 788]    347F: CD 10                                 int 10h
[ 789]    3481: 50 56 EB 02 BA 00 BE 85 34 2E 8A 04   PRINT 186
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58                                  
[ 790]        :                                       
[ 791]        :                                       
[ 792]        :                                       
[ 793]        :                                       ;return the cursor to its original position:
[ 794]    349A: E8 21 03                              call Load_PlayerLoc
[ 795]    349D: E8 55 F7                              call SetCursor
[ 796]    34A0: C3                                    ret
[ 797]        :                                       
[ 798]    34A1:                                       opendoor5:
[ 799]    34A1: E8 11 03                              call Save_PlayerLoc
[ 800]    34A4: E8 62 04                              call clear_player
[ 801]    34A7: E8 A9 02                              call clear_oldmessage
[ 802]        :                                       
[ 803]    34AA: B2 3E                                 mov dl,62
[ 804]    34AC: B6 06                                 mov dh,6
[ 805]    34AE: E8 44 F7                              call SetCursor
[ 806]        :                                       
[ 807]    34B1: 50 56 EB 0E 79 6F 75 20 68 61 76 65   PRINT 'you have open'
                20 6F 70 65 6E 00 BE B5 34 2E 8A 04 
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58                                  
[ 808]    34D6: B2 3E                                 mov dl,62
[ 809]    34D8: B6 07                                 mov dh,7
[ 810]    34DA: E8 18 F7                              call SetCursor
[ 811]        :                                       
[ 812]    34DD: 50 56 EB 0B 47 72 65 65 6E 20 64 6F   PRINT 'Green door'
                6F 72 00 BE E1 34 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58       
[ 813]        :                                       
[ 814]        :                                       
[ 815]        :                                       ;when the last door is opened , you win:
[ 816]    34FF: E9 88 00                              jmp win
[ 817]        :                                       
[ 818]        :                                       
[ 819]        :                                       
[ 820]        :                                       
[ 821]        :                                       
[ 822]    3502:                                       give_up:
[ 823]        :                                       ;display loss screen:
[ 824]    3502: E8 15 17                              call CLEAR_SCREEN
[ 825]    3505: E8 35 04                              call set_background_color
[ 826]    3508: B4 09                                 mov ah,09h
[ 827]    350A: B6 00                                 mov dh,0
[ 828]    350C: BA 16 48                              mov dx, offset Give_up_str
[ 829]    350F: CD 21                                 int 21h
[ 830]    3511: B2 16                                 mov dl,22
[ 831]    3513: B6 0A                                 mov dh,10
[ 832]    3515: B4 02                                 mov ah, 02h
[ 833]    3517: B7 00                                 mov bh, 00
[ 834]    3519: CD 10                                 int 10h
[ 835]        :                                       
[ 836]    351B: 50 56 EB 11 59 6F 75 20 67 61 76 65   PRINT 'You gave up...:('
                20 75 70 2E 2E 2E 3A 28 00 BE 1F 35 
                2E 8A 04 3C 00 74 07 46 B4 0E CD 10 
                EB F2 5E 58                         
[ 837]    3543: 80 C6 01                              ADD dh ,1
[ 838]    3546: B4 02                                 mov ah, 02h
[ 839]    3548: B7 00                                 mov bh, 00
[ 840]    354A: CD 10                                 int 10h
[ 841]        :                                       
[ 842]    354C: 50 56 EB 20 70 72 65 73 73 20 61 6E   PRINT 'press any key to exit maze_game'
                79 20 6B 65 79 20 74 6F 20 65 78 69 
                74 20 6D 61 7A 65 5F 67 61 6D 65 00 
                BE 50 35 2E 8A 04 3C 00 74 07 46 B4 
                0E CD 10 EB F2 5E 58                
[ 843]    3583: B4 00                                 mov ah, 0h
[ 844]    3585: CD 16                                 int 16h
[ 845]    3587: E9 8E 16                              jmp theEND
[ 846]        :                                       
[ 847]    358A:                                       win:
[ 848]        :                                       ;display win screen:
[ 849]    358A: E8 8D 16                              call CLEAR_SCREEN
[ 850]    358D: E8 AD 03                              call set_background_color
[ 851]    3590: B4 09                                 mov ah,09h
[ 852]    3592: B6 00                                 mov dh,0
[ 853]    3594: BA 1C 3E                              mov dx, offset win_str
[ 854]    3597: CD 21                                 int 21h
[ 855]    3599: B2 16                                 mov dl,22
[ 856]    359B: B6 0A                                 mov dh,10
[ 857]    359D: B4 02                                 mov ah, 02h
[ 858]    359F: B7 00                                 mov bh, 00
[ 859]    35A1: CD 10                                 int 10h
[ 860]        :                                       
[ 861]    35A3: 50 56 EB 1E 59 6F 75 20 62 65 61 74   PRINT 'You beat the maze :D awesome!'
                20 74 68 65 20 6D 61 7A 65 20 3A 44 
                20 61 77 65 73 6F 6D 65 21 00 BE A7 
                35 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58                      
[ 862]    35D8: 80 C6 01                              ADD dh ,1
[ 863]    35DB: 80 EA 08                              sub dl,8
[ 864]    35DE: B4 02                                 mov ah, 02h
[ 865]    35E0: B7 00                                 mov bh, 00
[ 866]    35E2: CD 10                                 int 10h
[ 867]        :                                       
[ 868]        :                                       
[ 869]        :                                       
[ 870]    35E4: 50 56 EB 1F 70 72 65 73 73 20 61 6E   PRINT 'press any key to quit the game'
                79 20 6B 65 79 20 74 6F 20 71 75 69 
                74 20 74 68 65 20 67 61 6D 65 00 BE 
                E8 35 2E 8A 04 3C 00 74 07 46 B4 0E 
                CD 10 EB F2 5E 58                   
[ 871]        :                                       
[ 872]        :                                       
[ 873]        :                                       
[ 874]        :                                       
[ 875]    361A: B2 1A                                 mov dl,26
[ 876]    361C: B6 0F                                 mov dh,15
[ 877]    361E: E8 D4 F5                              call SetCursor
[ 878]        :                                       
[ 879]    3621: 50 56 EB 0A 79 6F 75 20 6D 6F 76 65   PRINT 'you move '
                20 00 BE 25 36 2E 8A 04 3C 00 74 07 
                46 B4 0E CD 10 EB F2 5E 58          
[ 880]    3642: A1 FF 29                              MOV ax,MovesCount
[ 881]        :                                       
[ 882]        :                                       
[ 883]        :                                       
[ 884]    3645: E8 06 16                              call PRINT_NUM
[ 885]        :                                       
[ 886]    3648: 50 56 EB 06 74 69 6D 65 73 00 BE 4C   PRINT 'times'
                36 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58                      
[ 887]        :                                       
[ 888]        :                                       
[ 889]        :                                       ;test les key pressed:
[ 890]    3665: B4 00                                 mov ah, 0h
[ 891]    3667: CD 16                                 int 16h
[ 892]        :                                       
[ 893]        :                                       
[ 894]        :                                       
[ 895]    3669: E9 AC 15                              jmp theEnd
[ 896]        :                                       
[ 897]        :                                       
[ 898]    366C:                                       win_EE:
[ 899]        :                                       ;display easter egg winning screen:
[ 900]        :                                       
[ 901]    366C: E8 AB 15                              call CLEAR_SCREEN
[ 902]    366F: E8 CB 02                              call set_background_color
[ 903]    3672: B4 09                                 mov ah,09h
[ 904]    3674: B6 00                                 mov dh,0
[ 905]    3676: BA D4 42                              mov dx, offset win_EE_str
[ 906]    3679: CD 21                                 int 21h
[ 907]    367B: B2 16                                 mov dl,22
[ 908]    367D: B6 0A                                 mov dh,10
[ 909]    367F: B4 02                                 mov ah, 02h
[ 910]    3681: B7 00                                 mov bh, 00
[ 911]    3683: CD 10                                 int 10h
[ 912]        :                                       
[ 913]    3685: 50 56 EB 23 59 6F 75 20 66 6F 75 6E   PRINT 'You found all the eggs :D awesome!'
                64 20 61 6C 6C 20 74 68 65 20 65 67 
                67 73 20 3A 44 20 61 77 65 73 6F 6D 
                65 21 00 BE 89 36 2E 8A 04 3C 00 74 
                07 46 B4 0E CD 10 EB F2 5E 58       
[ 914]    36BF: 80 C6 01                              ADD dh ,1
[ 915]    36C2: 80 EA 08                              sub dl,8
[ 916]    36C5: B4 02                                 mov ah, 02h
[ 917]    36C7: B7 00                                 mov bh, 00
[ 918]    36C9: CD 10                                 int 10h
[ 919]        :                                       
[ 920]        :                                       
[ 921]        :                                       
[ 922]    36CB: 50 56 EB 1F 50 72 65 73 73 20 61 6E   PRINT 'Press any key to quit the game'
                79 20 6B 65 79 20 74 6F 20 71 75 69 
                74 20 74 68 65 20 67 61 6D 65 00 BE 
                CF 36 2E 8A 04 3C 00 74 07 46 B4 0E 
                CD 10 EB F2 5E 58                   
[ 923]        :                                       
[ 924]        :                                       
[ 925]        :                                       
[ 926]        :                                       
[ 927]    3701: B2 1A                                 mov dl,26
[ 928]    3703: B6 0F                                 mov dh,15
[ 929]    3705: E8 ED F4                              call SetCursor
[ 930]        :                                       
[ 931]    3708: 50 56 EB 0A 79 6F 75 20 6D 6F 76 65   PRINT 'you move '
                20 00 BE 0C 37 2E 8A 04 3C 00 74 07 
                46 B4 0E CD 10 EB F2 5E 58          
[ 932]    3729: A1 FF 29                              MOV ax,MovesCount
[ 933]        :                                       
[ 934]        :                                       
[ 935]        :                                       
[ 936]    372C: E8 1F 15                              call PRINT_NUM
[ 937]        :                                       
[ 938]    372F: 50 56 EB 06 74 69 6D 65 73 00 BE 33   PRINT 'times'
                37 2E 8A 04 3C 00 74 07 46 B4 0E CD 
                10 EB F2 5E 58                      
[ 939]        :                                       
[ 940]        :                                       
[ 941]        :                                       ;wait for a key to be pressed:
[ 942]    374C: B4 00                                 mov ah, 0h
[ 943]    374E: CD 16                                 int 16h
[ 944]        :                                       
[ 945]        :                                       
[ 946]        :                                       
[ 947]    3750: E9 C5 14                              jmp theEnd
[ 948]        :                                       
[ 949]        :                                       
[ 950]        :                                       
[ 951]        :                                       
[ 952]    3753:                                       clear_oldmessage proc near
[ 953]        :                                       ;delete the old dialog:
[ 954]    3753: B2 3E                                 mov dl,62
[ 955]    3755: B6 06                                 mov dh,6
[ 956]    3757: B4 02                                 mov ah, 02h
[ 957]    3759: B7 00                                 mov bh, 00
[ 958]    375B: CD 10                                 int 10h
[ 959]    375D: 50 56 EB 10 20 20 20 20 20 20 20 20   PRINT '               '
                20 20 20 20 20 20 20 00 BE 61 37 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58                            
[ 960]    3784: 80 C6 01                              add dh,1
[ 961]    3787: B4 02                                 mov ah, 02h
[ 962]    3789: B7 00                                 mov bh, 00
[ 963]    378B: CD 10                                 int 10h
[ 964]    378D: 50 56 EB 10 20 20 20 20 20 20 20 20   PRINT '               '
                20 20 20 20 20 20 20 00 BE 91 37 2E 
                8A 04 3C 00 74 07 46 B4 0E CD 10 EB 
                F2 5E 58                            
[ 965]    37B4: C3                                    ret
[ 966]        :                                       
[ 967]        :                                       
[ 968]        :                                       clear_oldmessage endp
[ 969]        :                                       
[ 970]    37B5:                                       Save_PlayerLoc proc near
[ 971]        :                                       ;save player position:
[ 972]    37B5: 88 36 01 2A                           mov DhPlayer,dh
[ 973]    37B9: 88 16 02 2A                           mov DlPlayer,dl
[ 974]        :                                       
[ 975]    37BD: C3                                    ret
[ 976]        :                                       
[ 977]        :                                       
[ 978]        :                                       Save_PlayerLoc endp
[ 979]        :                                       
[ 980]    37BE:                                       Load_PlayerLoc proc near
[ 981]        :                                       ;change cursor position to the last saved player position:
[ 982]    37BE: 8A 36 01 2A                           mov dh,DhPlayer
[ 983]    37C2: 8A 16 02 2A                           mov dl,DlPlayer
[ 984]        :                                       
[ 985]    37C6: C3                                    ret
[ 986]        :                                       
[ 987]        :                                       
[ 988]        :                                       Load_PlayerLoc endp
[ 989]        :                                       
[ 990]        :                                       
[ 991]    37C7:                                       UpdateInv proc near
[ 992]        :                                       ;update the inventory:
[ 993]    37C7:                                       testhavekey1:
[ 994]    37C7: 83 3E FD 29 01                        cmp whichKey,1
[ 995]    37CC: 74 02                                 je Draw_on_key1
[ 996]    37CE: EB 39                                 jmp testhavekey2
[ 997]    37D0:                                       Draw_on_key1:
[ 998]        :                                       ;draw in inventory which key we have unlocked:
[ 999]    37D0: B2 41                                 mov dl,65
[1000]    37D2: B6 04                                 mov dh,4
[1001]    37D4: B7 00                                 mov bh, 0
[1002]    37D6: B4 02                                 mov ah, 0x2
[1003]    37D8: CD 10                                 int 0x10
[1004]    37DA: B9 01 00                              mov cx, 1 ; nb char
[1005]    37DD: B7 00                                 mov bh, 0
[1006]    37DF: B3 40                                 mov bl, 0x40 ; color
[1007]    37E1: B0 20                                 mov al, 0x20 ; blank char
[1008]    37E3: B4 09                                 mov ah, 0x9
[1009]    37E5: CD 10                                 int 0x10
[1010]    37E7: B4 02                                 mov ah, 02h
[1011]    37E9: B7 00                                 mov bh, 00
[1012]    37EB: CD 10                                 int 10h
[1013]    37ED: 50 56 EB 02 D8 00 BE F1 37 2E 8A 04   PRINT 216
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58                                  
[1014]    3806: E9 FF 00                              jmp end_UpdateInv
[1015]        :                                       
[1016]    3809:                                       testhavekey2:
[1017]    3809: 83 3E FD 29 02                        cmp whichKey,2
[1018]    380E: 74 02                                 je Draw_on_key2
[1019]    3810: EB 39                                 jmp testhavekey3
[1020]    3812:                                       Draw_on_key2:
[1021]        :                                       ;draw in inventory which key we have unlocked:
[1022]    3812: B2 43                                 mov dl,67
[1023]    3814: B6 04                                 mov dh,4
[1024]    3816: B7 00                                 mov bh, 0
[1025]    3818: B4 02                                 mov ah, 0x2
[1026]    381A: CD 10                                 int 0x10
[1027]    381C: B9 01 00                              mov cx, 1 ; nb char
[1028]    381F: B7 00                                 mov bh, 0
[1029]    3821: B3 50                                 mov bl, 0x50 ; color
[1030]    3823: B0 20                                 mov al, 0x20 ; blank char
[1031]    3825: B4 09                                 mov ah, 0x9
[1032]    3827: CD 10                                 int 0x10
[1033]    3829: B4 02                                 mov ah, 02h
[1034]    382B: B7 00                                 mov bh, 00
[1035]    382D: CD 10                                 int 10h
[1036]    382F: 50 56 EB 02 D8 00 BE 33 38 2E 8A 04   PRINT 216
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58                                  
[1037]    3848: E9 BD 00                              jmp end_UpdateInv
[1038]    384B:                                       testhavekey3:
[1039]    384B: 83 3E FD 29 03                        cmp whichKey,3
[1040]    3850: 74 02                                 je Draw_on_key3
[1041]    3852: EB 36                                 jmp testhavekey4
[1042]    3854:                                       Draw_on_key3:
[1043]        :                                       ;draw in inventory which key we have unlocked:
[1044]    3854: B2 45                                 mov dl,69
[1045]    3856: B6 04                                 mov dh,4
[1046]    3858: B7 00                                 mov bh, 0
[1047]    385A: B4 02                                 mov ah, 0x2
[1048]    385C: CD 10                                 int 0x10
[1049]    385E: B9 01 00                              mov cx, 1 ; nb char
[1050]    3861: B7 00                                 mov bh, 0
[1051]    3863: B3 30                                 mov bl, 0x30 ; color
[1052]    3865: B0 20                                 mov al, 0x20 ; blank char
[1053]    3867: B4 09                                 mov ah, 0x9
[1054]    3869: CD 10                                 int 0x10
[1055]    386B: B4 02                                 mov ah, 02h
[1056]    386D: B7 00                                 mov bh, 00
[1057]    386F: CD 10                                 int 10h
[1058]    3871: 50 56 EB 02 D8 00 BE 75 38 2E 8A 04   PRINT 216
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58                                  
[1059]        :                                       
[1060]    388A:                                       testhavekey4:
[1061]    388A: 83 3E FD 29 04                        cmp whichKey,4
[1062]    388F: 74 02                                 je Draw_on_key4
[1063]    3891: EB 36                                 jmp testhavekey5
[1064]    3893:                                       Draw_on_key4:
[1065]        :                                       ;draw in inventory which key we have unlocked:
[1066]    3893: B2 47                                 mov dl,71
[1067]    3895: B6 04                                 mov dh,4
[1068]    3897: B7 00                                 mov bh, 0
[1069]    3899: B4 02                                 mov ah, 0x2
[1070]    389B: CD 10                                 int 0x10
[1071]    389D: B9 01 00                              mov cx, 1 ; nb char
[1072]    38A0: B7 00                                 mov bh, 0
[1073]    38A2: B3 60                                 mov bl, 0x60 ; color
[1074]    38A4: B0 20                                 mov al, 0x20 ; blank char
[1075]    38A6: B4 09                                 mov ah, 0x9
[1076]    38A8: CD 10                                 int 0x10
[1077]    38AA: B4 02                                 mov ah, 02h
[1078]    38AC: B7 00                                 mov bh, 00
[1079]    38AE: CD 10                                 int 10h
[1080]    38B0: 50 56 EB 02 D8 00 BE B4 38 2E 8A 04   PRINT 216
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58                                  
[1081]        :                                       
[1082]    38C9:                                       testhavekey5:
[1083]    38C9: 83 3E FD 29 05                        cmp whichKey,5
[1084]    38CE: 74 02                                 je Draw_on_key5
[1085]    38D0: EB 36                                 jmp end_UpdateInv
[1086]    38D2:                                       Draw_on_key5:
[1087]        :                                       ;draw in inventory which key we have unlocked:
[1088]    38D2: B2 49                                 mov dl,73
[1089]    38D4: B6 04                                 mov dh,4
[1090]    38D6: B7 00                                 mov bh, 0
[1091]    38D8: B4 02                                 mov ah, 0x2
[1092]    38DA: CD 10                                 int 0x10
[1093]    38DC: B9 01 00                              mov cx, 1 ; nb char
[1094]    38DF: B7 00                                 mov bh, 0
[1095]    38E1: B3 20                                 mov bl, 0x20 ; color
[1096]    38E3: B0 20                                 mov al, 0x20 ; blank char
[1097]    38E5: B4 09                                 mov ah, 0x9
[1098]    38E7: CD 10                                 int 0x10
[1099]    38E9: B4 02                                 mov ah, 02h
[1100]    38EB: B7 00                                 mov bh, 00
[1101]    38ED: CD 10                                 int 10h
[1102]    38EF: 50 56 EB 02 D8 00 BE F3 38 2E 8A 04   PRINT 216
                3C 00 74 07 46 B4 0E CD 10 EB F2 5E 
                58                                  
[1103]        :                                       
[1104]    3908:                                       end_UpdateInv:
[1105]    3908: C3                                    ret
[1106]        :                                       
[1107]        :                                       UpdateInv endp
[1108]        :                                       
[1109]    3909:                                       clear_player proc near
[1110]        :                                       ;delete last player position:
[1111]        :                                       
[1112]    3909: B7 00                                 mov bh, 0
[1113]    390B: B4 02                                 mov ah, 0x2
[1114]    390D: CD 10                                 int 0x10
[1115]    390F: B9 02 00                              mov cx, 2 ; nb char
[1116]    3912: B7 00                                 mov bh, 0
[1117]    3914: B3 19                                 mov bl, 0x19 ; color
[1118]    3916: B0 20                                 mov al, 0x20 ; blank char
[1119]    3918: B4 09                                 mov ah, 0x9
[1120]    391A: CD 10                                 int 0x10
[1121]    391C: B4 02                                 mov ah, 02h
[1122]    391E: B7 00                                 mov bh, 00
[1123]    3920: CD 10                                 int 10h
[1124]        :                                       
[1125]    3922: 50 56 EB 03 20 20 00 BE 26 39 2E 8A   PRINT '  '
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58                               
[1126]    393C: C3                                    ret
[1127]        :                                       
[1128]        :                                       clear_player endp
[1129]        :                                       
[1130]    393D:                                       set_background_color proc near
[1131]        :                                       
[1132]    393D: BA 00 00                              mov dx, 0 ; Set cursor to top left-most corner of screen
[1133]    3940: B7 00                                 mov bh, 0
[1134]    3942: B4 02                                 mov ah, 0x2
[1135]    3944: CD 10                                 int 0x10
[1136]    3946: B9 E8 07                              mov cx, 2024 ; print 2024 chars (all the screen)
[1137]    3949: B7 00                                 mov bh, 0
[1138]    394B: B3 19                                 mov bl, 0x19 ; color
[1139]    394D: B0 20                                 mov al, 0x20 ; blank char
[1140]    394F: B4 09                                 mov ah, 0x9
[1141]    3951: CD 10                                 int 0x10
[1142]    3953: C3                                    ret
[1143]        :                                       
[1144]        :                                       set_background_color endp
[1145]        :                                       
[1146]        :                                       
[1147]        :                                       
[1148]        :                                       
[1149]    3954: 20 20 0A 00 0D 00                     game_menu_str dw '  ',0ah,0dh
[1150]    395A: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1151]    398C: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1152]    39BE: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                 __  __                  _____                ',0ah,0dh
                20 20 20 20 20 5F 5F 20 20 5F 5F 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 5F 5F 5F 5F 5F 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 0A 00 0D 00                   
[1153]    3A00: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                |  \/  |                / ____|               ',0ah,0dh
                20 20 20 20 7C 20 20 5C 2F 20 20 7C 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 2F 20 5F 5F 5F 5F 7C 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 0A 00 0D 00                   
[1154]    3A42: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                | \  / | __ _ _______  | |  __  __ _ _ __ ___   ___    ',0ah,0dh
                20 20 20 20 7C 20 5C 20 20 2F 20 7C 
                20 5F 5F 20 5F 20 5F 5F 5F 5F 5F 5F 
                5F 20 20 7C 20 7C 20 20 5F 5F 20 20 
                5F 5F 20 5F 20 5F 20 5F 5F 20 5F 5F 
                5F 20 20 20 5F 5F 5F 20 20 20 20 00 
                0A 00 0D 00                         
[1155]    3A8E: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                | |\/| |/ _` |_  / _ \ | | |_ |/ _  |  _   _ \ / _ \   ',0ah,0dh
                20 20 20 20 7C 20 7C 5C 2F 7C 20 7C 
                2F 20 5F 60 20 7C 5F 20 20 2F 20 5F 
                20 5C 20 7C 20 7C 20 7C 5F 20 7C 2F 
                20 5F 20 20 7C 20 20 5F 20 20 20 5F 
                20 5C 20 2F 20 5F 20 5C 20 20 20 00 
                0A 00 0D 00                         
[1156]    3ADA: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                | |  | | (_| |/ /  __/ | |__| | (_| | | | | | |  __/   ',0ah,0dh
                20 20 20 20 7C 20 7C 20 20 7C 20 7C 
                20 28 5F 7C 20 7C 2F 20 2F 20 20 5F 
                5F 2F 20 7C 20 7C 5F 5F 7C 20 7C 20 
                28 5F 7C 20 7C 20 7C 20 7C 20 7C 20 
                7C 20 7C 20 20 5F 5F 2F 20 20 20 00 
                0A 00 0D 00                         
[1157]    3B26: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                |_|  |_|\__ _/___\___|  \_____|\__ _|_| |_| |_|\___|   ',0ah,0dh
                20 20 20 20 7C 5F 7C 20 20 7C 5F 7C 
                5C 5F 5F 20 5F 2F 5F 5F 5F 5C 5F 5F 
                5F 7C 20 20 5C 5F 5F 5F 5F 5F 7C 5C 
                5F 5F 20 5F 7C 5F 7C 20 7C 5F 7C 20 
                7C 5F 7C 5C 5F 5F 5F 7C 20 20 20 00 
                0A 00 0D 00                         
[1158]    3B72: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1159]    3BA4: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1160]    3BD6: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1161]    3C08: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1162]    3C3A: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1163]    3C6C: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1164]    3C9E: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1165]    3CD0: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1166]    3D02: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1167]    3D34: 20 20 20 20 20 20 20 20 20 20 20 20   dw '            |---------------------------||---------------------------|  ',0ah,0dh
                7C 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 
                2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 
                2D 2D 2D 2D 7C 7C 2D 2D 2D 2D 2D 2D 
                2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 2D 
                2D 2D 2D 2D 2D 2D 2D 2D 2D 7C 20 20 
                0A 00 0D 00                         
[1168]    3D80: 20 20 20 20 20 20 20 20 20 20 20 20   dw '            | ^ Press "enter" to play ^ || ^   Press "esc" to quit ^ | ',0ah,0dh
                7C 20 5E 20 50 72 65 73 73 20 22 65 
                6E 74 65 72 22 20 74 6F 20 70 6C 61 
                79 20 5E 20 7C 7C 20 5E 20 20 20 50 
                72 65 73 73 20 22 65 73 63 22 20 74 
                6F 20 71 75 69 74 20 5E 20 7C 20 00 
                0A 00 0D 00                         
[1169]    3DCC: 20 20 20 20 20 20 20 20 20 20 20 20   dw '            |___________________________||___________________________|',0ah,0dh
                7C 5F 5F 5F 5F 5F 5F 5F 5F 5F 5F 5F 
                5F 5F 5F 5F 5F 5F 5F 5F 5F 5F 5F 5F 
                5F 5F 5F 5F 7C 7C 5F 5F 5F 5F 5F 5F 
                5F 5F 5F 5F 5F 5F 5F 5F 5F 5F 5F 5F 
                5F 5F 5F 5F 5F 5F 5F 5F 5F 7C 0A 00 
                0D 00                               
[1170]        :                                       
[1171]    3E16: 24 00 0A 00 0D 00                     dw '$',0ah,0dh
[1172]        :                                       
[1173]    3E1C: 20 20 0A 00 0D 00                     win_str dw '  ',0ah,0dh
[1174]        :                                       
[1175]    3E22: 20 20 20 20 20 20 5F 5F 5F 5F 5F 20   dw '      _____  _____  __          _______          ',0ah,0dh
                20 5F 5F 5F 5F 5F 20 20 5F 5F 20 20 
                20 20 20 20 20 20 20 20 5F 5F 5F 5F 
                5F 5F 5F 20 20 20 20 20 20 20 20 20 
                20 00 0A 00 0D 00                   
[1176]    3E58: 20 20 20 20 20 2F 20 5F 5F 5F 5F 7C   dw '     / ____|/ ____| \ \        / /  __ \         ',0ah,0dh
                2F 20 5F 5F 5F 5F 7C 20 5C 20 5C 20 
                20 20 20 20 20 20 20 2F 20 2F 20 20 
                5F 5F 20 5C 20 20 20 20 20 20 20 20 
                20 00 0A 00 0D 00                   
[1177]    3E8E: 20 20 20 20 7C 20 7C 20 20 5F 5F 7C   dw '    | |  __| |  __   \ \  /\  / /| |__) |        ',0ah,0dh
                20 7C 20 20 5F 5F 20 20 20 5C 20 5C 
                20 20 2F 5C 20 20 2F 20 2F 7C 20 7C 
                5F 5F 29 20 7C 20 20 20 20 20 20 20 
                20 00 0A 00 0D 00                   
[1178]    3EC4: 20 20 20 20 7C 20 7C 20 7C 5F 20 7C   dw '    | | |_ | | |_ |   \ \/  \/ / |  ___/         ',0ah,0dh
                20 7C 20 7C 5F 20 7C 20 20 20 5C 20 
                5C 2F 20 20 5C 2F 20 2F 20 7C 20 20 
                5F 5F 5F 2F 20 20 20 20 20 20 20 20 
                20 00 0A 00 0D 00                   
[1179]    3EFA: 20 20 20 20 7C 20 7C 5F 5F 7C 20 7C   dw '    | |__| | |__| |    \  /\  /  | |             ',0ah,0dh
                20 7C 5F 5F 7C 20 7C 20 20 20 20 5C 
                20 20 2F 5C 20 20 2F 20 20 7C 20 7C 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 00 0A 00 0D 00                   
[1180]    3F30: 20 20 20 20 20 5C 5F 5F 5F 5F 5F 7C   dw '     \_____|\_____|     \/  \/   |_|             ',0ah,0dh
                5C 5F 5F 5F 5F 5F 7C 20 20 20 20 20 
                5C 2F 20 20 5C 2F 20 20 20 7C 5F 7C 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 00 0A 00 0D 00                   
[1181]    3F66: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1182]    3F98: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1183]    3FCA: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1184]    3FFC: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1185]    402E: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1186]    4060: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1187]    4092: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1188]    40C4: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1189]    40F6: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1190]    4128: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1191]    415A: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1192]    418C: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1193]    41BE: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1194]    41F0: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1195]    4222: 20 20 20 20 20 20 20 20 20 20 20 5C   dw '           \(^o^)/\(^o^)/\(^o^)/\(^o^)/\(^o^)/\(^o^)/\(^o^)/\(^o^)/',0ah,0dh
                28 5E 6F 5E 29 2F 5C 28 5E 6F 5E 29 
                2F 5C 28 5E 6F 5E 29 2F 5C 28 5E 6F 
                5E 29 2F 5C 28 5E 6F 5E 29 2F 5C 28 
                5E 6F 5E 29 2F 5C 28 5E 6F 5E 29 2F 
                5C 28 5E 6F 5E 29 2F 00 0A 00 0D 00 
                                                    
[1196]    426A: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1197]    429C: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1198]        :                                       
[1199]    42CE: 24 00 0A 00 0D 00                     dw '$',0ah,0dh
[1200]        :                                       
[1201]    42D4: 20 20 0A 00 0D 00                     win_EE_str dw '  ',0ah,0dh
[1202]        :                                       
[1203]    42DA: 20 20 20 20 20 20 5F 5F 5F 5F 5F 20   dw '      _____  _____  __          _______          ',0ah,0dh
                20 5F 5F 5F 5F 5F 20 20 5F 5F 20 20 
                20 20 20 20 20 20 20 20 5F 5F 5F 5F 
                5F 5F 5F 20 20 20 20 20 20 20 20 20 
                20 00 0A 00 0D 00                   
[1204]    4310: 20 20 20 20 20 2F 20 5F 5F 5F 5F 7C   dw '     / ____|/ ____| \ \        / /  __ \         ',0ah,0dh
                2F 20 5F 5F 5F 5F 7C 20 5C 20 5C 20 
                20 20 20 20 20 20 20 2F 20 2F 20 20 
                5F 5F 20 5C 20 20 20 20 20 20 20 20 
                20 00 0A 00 0D 00                   
[1205]    4346: 20 20 20 20 7C 20 7C 20 20 5F 5F 7C   dw '    | |  __| |  __   \ \  /\  / /| |__) |    	.-"-. ',0ah,0dh
                20 7C 20 20 5F 5F 20 20 20 5C 20 5C 
                20 20 2F 5C 20 20 2F 20 2F 7C 20 7C 
                5F 5F 29 20 7C 20 20 20 20 20 20 20 
                20 2E 2D 22 2D 2E 20 00 0A 00 0D 00 
                                                    
[1206]    4382: 20 20 20 20 7C 20 7C 20 7C 5F 20 7C   dw '    | | |_ | | |_ |   \ \/  \/ / |  ___/       ./=^=^=\. ',0ah,0dh
                20 7C 20 7C 5F 20 7C 20 20 20 5C 20 
                5C 2F 20 20 5C 2F 20 2F 20 7C 20 20 
                5F 5F 5F 2F 20 20 20 20 20 20 20 2E 
                2F 3D 5E 3D 5E 3D 5C 2E 20 00 0A 00 
                0D 00                               
[1207]    43C0: 20 20 20 20 7C 20 7C 5F 5F 7C 20 7C   dw '    | |__| | |__| |    \  /\  /  | |          /=^=^=^=^=\ ',0ah,0dh
                20 7C 5F 5F 7C 20 7C 20 20 20 20 5C 
                20 20 2F 5C 20 20 2F 20 20 7C 20 7C 
                20 20 20 20 20 20 20 20 20 20 2F 3D 
                5E 3D 5E 3D 5E 3D 5E 3D 5C 20 0A 00 
                0D 00                               
[1208]    43FE: 20 20 20 20 20 5C 5F 5F 5F 5F 5F 7C   dw '     \_____|\_____|     \/  \/   |_|          :^= HAPPY =^; ',0ah,0dh
                5C 5F 5F 5F 5F 5F 7C 20 20 20 20 20 
                5C 2F 20 20 5C 2F 20 20 20 7C 5F 7C 
                20 20 20 20 20 20 20 20 20 3A 5E 3D 
                20 48 41 50 50 59 20 3D 5E 3B 20 00 
                0A 00 0D 00                         
[1209]    443E: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                             |^ EASTER! ^|',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 7C 5E 20 
                45 41 53 54 45 52 21 20 5E 7C 0A 00 
                0D 00                               
[1210]    447C: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              :^=^=^=^=^=^:',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 3A 5E 3D 
                5E 3D 5E 3D 5E 3D 5E 3D 5E 3A 0A 00 
                0D 00                               
[1211]    44BA: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              \=^=^=^=^=/',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 5C 3D 
                5E 3D 5E 3D 5E 3D 5E 3D 2F 00 0A 00 
                0D 00                               
[1212]    44F8: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                               `.=^=^=.`',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 60 
                2E 3D 5E 3D 5E 3D 2E 60 0A 00 0D 00 
                                                    
[1213]    4534: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                                 `~~~` ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 60 7E 7E 7E 60 20 00 0A 00 0D 00 
                                                    
[1214]    4570: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1215]    45A2: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1216]    45D4: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1217]    4606: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1218]    4638: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1219]    466A: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1220]    469C: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1221]    46CE: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1222]    4700: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1223]    4732: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1224]    4764: 20 20 20 20 20 20 20 20 20 20 20 5C   dw '           \(^o^)/\(^o^)/\(^o^)/\(^o^)/\(^o^)/\(^o^)/\(^o^)/\(^o^)/',0ah,0dh
                28 5E 6F 5E 29 2F 5C 28 5E 6F 5E 29 
                2F 5C 28 5E 6F 5E 29 2F 5C 28 5E 6F 
                5E 29 2F 5C 28 5E 6F 5E 29 2F 5C 28 
                5E 6F 5E 29 2F 5C 28 5E 6F 5E 29 2F 
                5C 28 5E 6F 5E 29 2F 00 0A 00 0D 00 
                                                    
[1225]    47AC: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1226]    47DE: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1227]        :                                       
[1228]    4810: 24 00 0A 00 0D 00                     dw '$',0ah,0dh
[1229]        :                                       
[1230]        :                                       
[1231]    4816: 20 20 0A 00 0D 00                     Give_up_str dw '  ',0ah,0dh
[1232]    481C: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1233]    484E: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1234]    4880: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1235]    48B2: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1236]    48E4: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1237]    4916: 20 20 20 20 20 20 20 20 20 20 20 20   dw '             (-_-) (-_-) (-_-) (-_-) (-_-) (-_-) (-_-) (-_-)',0ah,0dh
                20 28 2D 5F 2D 29 20 28 2D 5F 2D 29 
                20 28 2D 5F 2D 29 20 28 2D 5F 2D 29 
                20 28 2D 5F 2D 29 20 28 2D 5F 2D 29 
                20 28 2D 5F 2D 29 20 28 2D 5F 2D 29 
                0A 00 0D 00                         
[1238]    4956: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1239]    4988: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1240]    49BA: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1241]    49EC: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1242]    4A1E: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1243]    4A50: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1244]    4A82: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1245]    4AB4: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1246]    4AE6: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1247]    4B18: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1248]    4B4A: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1249]    4B7C: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1250]    4BAE: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1251]    4BE0: 20 20 20 20 20 20 20 20 20 20 20 20   dw '                                              ',0ah,0dh
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 20 20 
                20 20 20 20 20 20 20 20 20 20 0A 00 
                0D 00                               
[1252]        :                                       
[1253]    4C12: 24 00 0A 00 0D 00                     dw '$',0ah,0dh
[1254]        :                                       
[1255]        :                                       
[1256]        :                                       
[1257]    4C18:                                       theEnd:
[1258]        :                                       
[1259]    4C18: EB 32 50 1E 53 51 57 B8 40 00 8E D8   DEFINE_CLEAR_SCREEN
                B4 06 B0 00 B7 07 B5 00 B1 00 BF 84 
                00 8A 35 BF 4A 00 8A 15 FE CA CD 10 
                B7 00 B2 00 B6 00 B4 02 CD 10 5F 59 
                5B 1F 58 C3                         
[1260]    4C4C: EB 26 52 50 3D 00 00 75 0A 50 B0 30   DEFINE_PRINT_NUM
                B4 0E CD 10 58 EB 12 3D 00 00 79 0A 
                F7 D8 50 B0 2D B4 0E CD 10 58 E8 05 
                00 58 5A C3                         
[1261]    4C74: EB 50 50 53 51 52 B9 01 00 BB 10 27   DEFINE_PRINT_NUM_UNS
                3D 00 00 74 32 83 FB 00 74 35 83 F9 
                00 74 04 3B C3 72 14 B9 00 00 BA 00 
                00 F7 F3 04 30 50 8A C0 B4 0E CD 10 
                58 8B C2 50 BA 00 00 8B C3 2E F7 36 
                C4 4C 8B D8 58 EB CE 50 B0 30 B4 0E 
                CD 10 58 5A 59 5B 58 C3 0A 00       
[1262]        :                                       
[1263]        :                                       END
[1264]        :                                       
 
===================================================================================================
 




===================================================================================================
